{"version":3,"sources":["Chatbot/components/Avatar/Avatar.js","Chatbot/layout/Header/Header.js","Chatbot/features/Message/MessageBot.jsx","Chatbot/components/Options/Options.jsx","Chatbot/components/DatePicker/DatePicker.jsx","Chatbot/components/Facts/Facts.jsx","Chatbot/components/CheckboxGroup/CheckboxGroup.jsx","Chatbot/components/FactsAdded/FactsAdded.jsx","Chatbot/configuration/config.js","Chatbot/components/FactsFailed/FactsFailed.jsx","Chatbot/components/Loading/Loading.jsx","Chatbot/components/Info/Info.jsx","Chatbot/features/Actions/ActionProvider.js","Chatbot/features/Actions/MessageParser.js","Chatbot/views/Chatbot/Chatbot.js","serviceWorker.js","index.js","configuration lazy /^/.//.*$/ groupOptions: {} namespace object"],"names":["BotAvatar","props","id","className","style","backgroundColor","border","borderColor","borderRadius","width","viewBox","fill","d","Header","MessageBot","message","trim","fontSize","padding","textAlign","color","wordBreak","position","marginTop","marginLeft","fontWeight","components","p","children","a","node","href","properties","target","rel","img","src","alt","Options","actualmessage","JSON","parse","localStorage","getItem","example","pos","findIndex","object","key","type","console","log","content","length","options","buttonsMarkup","map","option","Button","variant","size","onClick","selected","actionProvider","showMessage","margin","minWidth","textTransform","text","DatePickerComponent","year","month","onChangeYear","onChangeMonth","display","defaultValue","reverse","required","value","onChange","name","classes","optionClasses","numeric","endYearGiven","i","Facts","useState","description","descriptionArray","setDescriptionArray","loadingButton","setLoadingButton","empty","setEmpty","handleAdddescription","newElement","parseInt","handleRemovedescription","array","filter","item","isEmpty","objectsArray","wasNull","handleSave","removeComment","saveFacts","des","top","left","transform","justifyContent","alignItems","height","TextField","e","event","newdesc","replace","handleUpdateDescription","sx","multiline","rows","DatePicker","handleSetYear","handleSetMonth","Typography","gutterBottom","CircularProgress","CheckboxGroup","React","elements","setElements","useEffect","newlist","element","handleChange","indexOf","Box","flexDirection","bgcolor","promise","FactsAd","factssaved","showButtons","setButtons","Info","comment","config","initialMessages","widgets","widgetName","widgetFunc","FactsFailed","Loading","customComponents","botAvatar","Avatar","header","botChatMessage","then","data","page","pages","setItem","stringify","concat","createChatBotMessage","delay","withAvatar","widget","main","ActionProvider","setStateFunc","createClientMessage","traerDerechos","loading","promises","forEach","push","Promise","resolve","reject","question","fetch","method","headers","body","response","json","result","derechosres","answers","x","answer","all","values","valuesfil","flat","toLowerCase","charAt","toUpperCase","slice","nextPage","setState","prevState","messages","factsfailed","addMessageToState","catch","reason","error","messageSelected","handleActionButton","window","open","backPage","backpage","back2page","messageButtons","Math","random","factsList","factsSaved","removeFacts","removeItem","facts","this","MessageParser","state","greet","App","count","setCount","maxWidth","right","bottom","placeholderText","messageParser","xmlns","class","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","webpackAsyncContext","req","__webpack_require__","o","Error","code","ids","t","keys","Object","module","exports"],"mappings":"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","file":"static/js/main.6b04d983.chunk.js","sourcesContent":["import React from \"react\";\n\nconst BotAvatar = (props) => {\n  return (\n    <div id=\"avatar-bot\" className=\"react-chatbot-kit-chat-bot-avatar-container\" style={{\n      backgroundColor: \"white\", border: \"1px solid\", borderColor: \"#3a5eb9\",\n      borderRadius: \"50px\"\n    }}>\n      <svg width=\"30px\" viewBox=\"0 0 122.88 112.92\" ><path fill=\"#3a5eb9\" d=\"M15.31,87.55a20.54,20.54,0,0,0,1.23,4.65,12.43,12.43,0,0,0,2.75,4.26c3.88,3.85,8.92,3.84,14.44,3.84v0h2.62c2.27-3.27,7.6-5.56,13.8-5.56,8.27,0,15,4.07,15,9.1s-6.71,9.1-15,9.1c-6.07,0-11.3-2.2-13.65-5.36H33.73c-7.08,0-13.55,0-19.55-5.94A19.78,19.78,0,0,1,9.8,94.93,28.6,28.6,0,0,1,8,87.55a8.2,8.2,0,0,1-8-8.18V49.87a8.2,8.2,0,0,1,8.18-8.18h.58c1.48-15.15,11-27,23.87-34.09A61.85,61.85,0,0,1,57.37.2,58.06,58.06,0,0,1,83.32,3.87c14.45,5.71,26.56,17.84,31.25,37.82h.13a8.2,8.2,0,0,1,8.18,8.18v29.5a8.2,8.2,0,0,1-8.18,8.18h-8.18V42.41C102.33,26,92.29,16,80.38,11.32A50,50,0,0,0,58,8.18a53.66,53.66,0,0,0-21.49,6.39C25.37,20.75,17.24,31,16.58,44.05a4,4,0,0,1-.22,1.15V87.55Z\" /></svg>    </div >\n  );\n};\n\nexport default BotAvatar;\n","import React from 'react';\nconst Header = (props) => {\n  return (\n    <div className={\"react-chatbot-kit-chat-header\"}>\n\n      ChatBot CSJ\n\n    </div>\n\n  );\n};\n\n\nexport default Header;","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\n\nconst MessageBot = (props) => {\n  return (\n    props.message.trim() && (\n      <div\n        id=\"chatbot-box\"\n        style={{\n          fontSize: \"0.85rem\",\n          padding: \"5px 30px\",\n          textAlign: \"left\",\n          color: \"#39393a\",\n          wordBreak: \"break-word\",\n          position: \"initial\",\n          marginTop: \"20px\",\n          marginLeft: \"20px\",\n          fontWeight: \"normal\",\n          borderRadius: \"20px\",\n          border: \"1px solid\",\n          width: \"700px\",\n          borderColor: \"#3a5eb9\",\n        }}\n      >\n        {props.message !== \"\" && (\n          <ReactMarkdown\n            components={{\n              p: ({ children }) => {\n                return <p>{children}</p>;\n              },\n              a: ({ node, children }) => {\n                // eslint-disable-next-line react/jsx-no-target-blank\n                return (\n                  <a\n                    href={`${node.properties.href}`}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {children}\n                  </a>\n                );\n              },\n              img: ({ node }) => {\n                return (\n                  // eslint-disable-next-line react/jsx-no-target-blank\n                  <a\n                    href={`${node.properties.src}`}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <img\n                      src={`${node.properties.src}`}\n                      alt={node.properties.alt}\n                      width=\"170\"\n                    />\n                  </a>\n                );\n              },\n            }}\n          >\n            {props.message}\n          </ReactMarkdown>\n        )}\n      </div>\n    )\n  );\n};\nexport default MessageBot;\n","import React from \"react\";\nimport Button from \"@mui/material/Button\";\n\nimport \"./Options.css\";\n\nconst Options = (props) => {\n  const actualmessage = JSON.parse(localStorage.getItem(\"actualmessage\"));\n  const example = actualmessage.example;\n\n  // eslint-disable-next-line array-callback-return\n  const pos = example.findIndex((object, key) => {\n    if (object.type === \"buttons\") {\n      console.log(object);\n      return object.content;\n    }\n    if (key === example.length - 1) {\n      return -1;\n    }\n  });\n  const options = pos !== -1 ? example[pos].content : [];\n  console.log(options);\n  const handleChange = (selected) => {\n    props.actionProvider.showMessage(selected, actualmessage);\n  };\n\n  const buttonsMarkup =\n    options.length > 0 &&\n    options.map((option) => (\n      <Button\n        variant=\"contained\"\n        size=\"medium\"\n        color=\"primary\"\n        onClick={() => handleChange(option)}\n        style={{\n          margin: \"20px\",\n          minWidth: \"200px\",\n          textTransform: \"none\",\n          borderRadius: \"10px\",\n          border: \"1px solid\",\n        }}\n      >\n        {option.text}\n      </Button>\n    ));\n\n  return <div className=\"options-container\">{buttonsMarkup}</div>;\n};\n\nexport default Options;\n","import React from \"react\";\nimport { YearPicker, MonthPicker } from \"react-dropdown-date\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst DatePickerComponent = ({ year, month, onChangeYear, onChangeMonth }) => {\n  return (\n    <div\n      style={{\n        display: \"block\",\n        padding: 5,\n        width: \"min-content\",\n      }}\n    >\n      <YearPicker\n        defaultValue={\"Año\"}\n        reverse // default is ASCENDING\n        required={true} // default is false\n        value={year} // mandatory\n        onChange={onChangeYear}\n        id={\"year\"}\n        name={\"year\"}\n        classes={\"classes\"}\n        optionClasses={\"option classes\"}\n      />\n      <MonthPicker\n        defaultValue={\"Mes\"}\n        numeric // to get months as numbers\n        endYearGiven // mandatory if end={} is given in YearPicker\n        year={year} // mandatory\n        required={true} // default is false\n        value={month} // mandatory\n        onChange={onChangeMonth}\n        id={\"month\"}\n        name={\"month\"}\n        classes={\"classes\"}\n        optionClasses={\"option classes\"}\n      />\n    </div>\n  );\n};\n\nexport default DatePickerComponent;\n","import React, { useState } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport DatePickerComponent from \"../DatePicker/DatePicker\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\n\nimport \"./Facts.css\";\n\nconst Facts = (props) => {\n  const [descriptionArray, setDescriptionArray] = useState([\n    { year: \"\", month: \"\", description: \"Descripción de los hechos...\", id: 0 },\n  ]);\n  const [loadingButton, setLoadingButton] = useState(false);\n  const [empty, setEmpty] = useState(false);\n\n  const handleSetYear = (event, key) => {\n    descriptionArray[key].year = event;\n    setDescriptionArray((descriptionArray) => [...descriptionArray]);\n  };\n\n  const handleSetMonth = (event, key) => {\n    descriptionArray[key].month = event;\n    setDescriptionArray((descriptionArray) => [...descriptionArray]);\n  };\n\n  const handleUpdateDescription = (event, key) => {\n    var newdesc = event.target.value.replace(\n      \"Descripción de los hechos...\",\n      \"\"\n    );\n    descriptionArray[key].description = newdesc;\n    setDescriptionArray((descriptionArray) => [...descriptionArray]);\n  };\n\n  const handleAdddescription = () => {\n    const newElement = {\n      year: \"\",\n      month: \"\",\n      description: \"Descripción de los hechos...\",\n      id: parseInt(descriptionArray.length),\n    };\n    setDescriptionArray((descriptionArray) => [\n      ...descriptionArray,\n      newElement,\n    ]);\n  };\n\n  const handleRemovedescription = async (pos) => {\n    const array = descriptionArray.filter((item) => item.id !== pos);\n    await setDescriptionArray(array);\n  };\n\n  const isEmpty = (objectsArray) => {\n    console.log(objectsArray);\n    var wasNull = false;\n    for (var i in objectsArray) {\n      console.log(objectsArray[i], objectsArray[i].description === \"\");\n      if (objectsArray[i].description === \"\") wasNull = true;\n    }\n    if (wasNull) return true;\n    else return false;\n  };\n\n  const handleSave = async (array) => {\n    const result = isEmpty(array);\n\n    if (!result) {\n      setEmpty(false);\n      setLoadingButton(true);\n      props.actionProvider.removeComment();\n\n      props.actionProvider.saveFacts(array);\n    } else {\n      setEmpty(true);\n    }\n  };\n\n  return (\n    <div>\n      {descriptionArray.map((des, key) => {\n        return (\n          <div className=\"facts-container\">\n            <div className=\"facts-message-content\">\n              <div\n                style={{\n                  position: \"relative\",\n                  margin: \"10px 10px\",\n                  display: \"inline-block\",\n                }}\n              >\n                <div\n                  style={{\n                    backgroundColor: \"white\",\n                    border: \"1px solid rgb(58, 94, 185)\",\n                    borderRadius: \"50px\",\n                    position: \"absolute\",\n                    top: \"60%\",\n                    left: \"5%\",\n                    transform: \"translateX(-50%) translateY(-50%)\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    width: \"40px\",\n                    height: \"40px\",\n                  }}\n                >\n                  <svg width=\"30px\" viewBox=\"0 0 512 512\">\n                    <path\n                      fill=\"#3a5eb9\"\n                      d=\"M256 288c79.5 0 144-64.5 144-144S335.5 0 256 0 112 64.5 112 144s64.5 144 144 144zm128 32h-55.1c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16H128C57.3 320 0 377.3 0 448v16c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48v-16c0-70.7-57.3-128-128-128z\"\n                    ></path>\n                  </svg>\n                </div>\n\n                <TextField\n                  value={des.description}\n                  onChange={(e) => handleUpdateDescription(e, key)}\n                  sx={{ padding: 2 }}\n                  multiline\n                  rows={4}\n                  style={{\n                    fontSize: \"0.70rem\",\n                    padding: \"5px 25px\",\n                    textAlign: \"left\",\n                    color: \"#39393a\",\n                    wordBreak: \"break-word\",\n                    position: \"initial\",\n                    marginTop: \"20px\",\n                    marginLeft: \"20px\",\n                    fontWeight: \"bold\",\n                    borderRadius: \"20px\",\n                    border: \"1px solid\",\n                    width: \"300px\",\n                    borderColor: \"#3a5eb9\",\n                  }}\n                />\n              </div>\n            </div>\n            <div className=\"facts-message-content\">\n              <DatePickerComponent\n                year={des.year}\n                month={des.month}\n                onChangeYear={(e) => handleSetYear(e, key)}\n                onChangeMonth={(e) => handleSetMonth(e, key)}\n              />\n            </div>\n            <div className=\"facts-message-content\">\n              {key === 0 && descriptionArray.length > 1 ? (\n                <Button\n                  variant=\"contained\"\n                  size=\"small\"\n                  color=\"primary\"\n                  onClick={() => handleRemovedescription(key)}\n                  style={{\n                    margin: \"5px\",\n                    minWidth: \"150px\",\n                    textTransform: \"none\",\n                    borderRadius: \"10px\",\n                    border: \"1px solid\",\n                  }}\n                >\n                  Eliminar éste hecho\n                </Button>\n              ) : key === 0 && descriptionArray.length === 1 ? (\n                <Button\n                  variant=\"contained\"\n                  size=\"small\"\n                  color=\"primary\"\n                  onClick={() => handleAdddescription()}\n                  style={{\n                    margin: \"5px\",\n                    minWidth: \"200px\",\n                    textTransform: \"none\",\n                    borderRadius: \"10px\",\n                    border: \"1px solid\",\n                  }}\n                >\n                  Agregar más hechos\n                </Button>\n              ) : key > 0 && descriptionArray.length > 0 ? (\n                <div style={{ width: \"min-content\" }}>\n                  <Button\n                    variant=\"contained\"\n                    size=\"small\"\n                    color=\"primary\"\n                    onClick={() => handleRemovedescription(key)}\n                    style={{\n                      margin: \"5px\",\n                      minWidth: \"150px\",\n                      textTransform: \"none\",\n                      borderRadius: \"10px\",\n                      border: \"1px solid\",\n                    }}\n                  >\n                    Eliminar éste hecho\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    size=\"small\"\n                    color=\"primary\"\n                    onClick={() => handleAdddescription()}\n                    style={{\n                      margin: \"5px\",\n                      minWidth: \"150px\",\n                      textTransform: \"none\",\n                      borderRadius: \"10px\",\n                      border: \"1px solid\",\n                    }}\n                  >\n                    Agregar más hechos\n                  </Button>\n                </div>\n              ) : null}\n            </div>\n          </div>\n        );\n      })}\n\n      <div style={{ alignItems: \"center\" }}>\n        {empty && (\n          <Typography variant=\"subtitle1\" gutterBottom>\n            Llene todos los datos\n          </Typography>\n        )}\n      </div>\n      <div style={{ alignItems: \"center\" }}>\n        {!loadingButton ? (\n          <Button\n            variant=\"contained\"\n            size=\"medium\"\n            color=\"primary\"\n            onClick={() => handleSave(descriptionArray)}\n            style={{\n              margin: \"20px\",\n              minWidth: \"200px\",\n              textTransform: \"none\",\n              borderRadius: \"10px\",\n              border: \"1px solid\",\n            }}\n          >\n            Guardar hechos\n          </Button>\n        ) : (\n          <CircularProgress />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Facts;\n","import React, { useEffect } from \"react\";\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\n\nconst CheckboxGroup = ({ props }) => {\n  // Checkbox Group\n  const [elements, setElements] = React.useState({});\n\n  useEffect(() => {\n    const list = JSON.parse(localStorage.getItem(\"derechos\"));\n    const newlist = list.map((object) => {\n      return { element: object, value: false };\n    });\n\n    setElements(newlist);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleChange = (value) => {\n    const pos = elements.map((object) => object.element).indexOf(value);\n    elements[pos].value = !elements[pos].value;\n    setElements((elements) => [...elements]);\n  };\n\n  return (\n    <div\n      style={{\n        position: \"relative\",\n        margin: \"10px 40px\",\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n      }}\n    >\n      <div\n        style={{\n          backgroundColor: \"white\",\n          border: \"1px solid rgb(58, 94, 185)\",\n          borderRadius: \"50px\",\n          position: \"absolute\",\n          top: \"60%\",\n          left: \"2%\",\n          transform: \"translateX(-50%) translateY(-50%)\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          width: \"40px\",\n          height: \"40px\",\n        }}\n      >\n        <svg width=\"30px\" viewBox=\"0 0 512 512\">\n          <path\n            fill=\"#3a5eb9\"\n            d=\"M256 288c79.5 0 144-64.5 144-144S335.5 0 256 0 112 64.5 112 144s64.5 144 144 144zm128 32h-55.1c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16H128C57.3 320 0 377.3 0 448v16c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48v-16c0-70.7-57.3-128-128-128z\"\n          ></path>\n        </svg>\n      </div>\n      <div\n        id=\"chatbot-box\"\n        style={{\n          fontSize: \"0.70rem\",\n          padding: \"5px 25px\",\n          textAlign: \"left\",\n          color: \"#54565a\",\n          wordBreak: \"break-word\",\n          position: \"initial\",\n          marginTop: \"20px\",\n          marginLeft: \"20px\",\n          fontWeight: \"normal\",\n          borderRadius: \"20px\",\n          border: \"1px solid\",\n          width: \"600px\",\n          borderColor: \"#3a5eb9\",\n        }}\n      >\n        {elements.length > 0\n          ? elements.map((item) => {\n              return (\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    bgcolor: \"background.paper\",\n                  }}\n                >\n                  {!item.value && (\n                    <CheckBoxOutlineBlankIcon\n                      color=\"#1976d2\"\n                      size={30}\n                      onClick={() => handleChange(item.element)}\n                    />\n                  )}\n                  {item.value && (\n                    <CheckBoxIcon\n                      color={\"primary\"}\n                      size={30}\n                      onClick={() => handleChange(item.element)}\n                    />\n                  )}\n                  <Typography variant=\"bodyRegular\" gutterBottom>\n                    {item.element}\n                  </Typography>\n                </Box>\n              );\n            })\n          : null}\n      </div>\n    </div>\n  );\n};\n\nexport default CheckboxGroup;\n","import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\n\nimport \"./FactsAdded.css\";\n\nconst FactsAd = (props) => {\n  const factssaved = JSON.parse(localStorage.getItem(\"factssaved\"));\n  const actualmessage = JSON.parse(localStorage.getItem(\"actualmessage\"));\n  const [showButtons, setButtons] = React.useState(true);\n\n  const handleChange = async (selected) => {\n    setButtons(false);\n    props.actionProvider.showMessage(selected, actualmessage);\n  };\n\n  return (\n    <div style={{ alignItems: \"center\" }}>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        Hechos adicionados:\n      </Typography>\n      {factssaved.length > 0\n        ? factssaved.map((item) => {\n            return (\n              <div\n                style={{\n                  position: \"relative\",\n                  margin: \"10px 40px\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <div\n                  style={{\n                    backgroundColor: \"white\",\n                    border: \"1px solid rgb(58, 94, 185)\",\n                    borderRadius: \"50px\",\n                    position: \"absolute\",\n                    top: \"60%\",\n                    left: \"4%\",\n                    transform: \"translateX(-50%) translateY(-50%)\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    width: \"40px\",\n                    height: \"40px\",\n                  }}\n                >\n                  <svg width=\"30px\" viewBox=\"0 0 512 512\">\n                    <path\n                      fill=\"#3a5eb9\"\n                      d=\"M256 288c79.5 0 144-64.5 144-144S335.5 0 256 0 112 64.5 112 144s64.5 144 144 144zm128 32h-55.1c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16H128C57.3 320 0 377.3 0 448v16c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48v-16c0-70.7-57.3-128-128-128z\"\n                    ></path>\n                  </svg>\n                </div>\n                <div\n                  id=\"chatbot-box\"\n                  style={{\n                    fontSize: \"0.85rem\",\n                    padding: \"5px 25px\",\n                    textAlign: \"left\",\n                    color: \"#54565a\",\n                    wordBreak: \"break-word\",\n                    position: \"center\",\n                    marginTop: \"20px\",\n                    marginLeft: \"20px\",\n                    fontWeight: \"normal\",\n                    borderRadius: \"20px\",\n                    border: \"1px solid\",\n                    width: \"600px\",\n                    borderColor: \"#3a5eb9\",\n                  }}\n                >\n                  <Box\n                    sx={{\n                      display: \"block\",\n                      flexDirection: \"row\",\n                      bgcolor: \"background.paper\",\n                      margin: 2,\n                    }}\n                  >\n                    <Box>\n                      <Typography variant=\"bodyRegular\" gutterBottom>\n                        Descripción: {item.description}\n                      </Typography>\n                    </Box>\n                    {item.year && item.month && (\n                      <Box>\n                        <Typography variant=\"bodyRegular\" gutterBottom>\n                          Fecha: {item.year}/{item.month}\n                        </Typography>\n                      </Box>\n                    )}\n\n                    <br></br>\n                  </Box>\n                </div>\n              </div>\n            );\n          })\n        : null}\n\n      {showButtons && (\n        <div style={{ alignItems: \"center\" }}>\n          <Button\n            variant=\"contained\"\n            size=\"medium\"\n            color=\"primary\"\n            onClick={() => handleChange(\"deletefacts\")}\n            style={{\n              margin: \"20px\",\n              minWidth: \"200px\",\n              textTransform: \"none\",\n              borderRadius: \"10px\",\n              border: \"1px solid\",\n            }}\n          >\n            Eliminar hechos\n          </Button>\n          <Button\n            variant=\"contained\"\n            size=\"medium\"\n            color=\"primary\"\n            onClick={() => handleChange(\"nextfacts\")}\n            style={{\n              margin: \"20px\",\n              minWidth: \"200px\",\n              textTransform: \"none\",\n              borderRadius: \"10px\",\n              border: \"1px solid\",\n            }}\n          >\n            Continuar\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FactsAd;\n","import React from \"react\";\nimport { createChatBotMessage } from \"react-chatbot-kit\";\nimport Avatar from \"../components/Avatar/Avatar\";\nimport Header from \"../layout/Header/Header\";\nimport BotChatMessage from \"../features/Message/MessageBot\";\nimport Options from \"../components/Options/Options\";\nimport Facts from \"../components/Facts/Facts\";\nimport CheckboxGroup from \"../components/CheckboxGroup/CheckboxGroup\";\nimport FactsAdded from \"../components/FactsAdded/FactsAdded\";\nimport FactsFailed from \"../components/FactsFailed/FactsFailed\";\nimport Loading from \"../components/Loading/Loading\";\nimport Info from \"../components/Info/Info\";\n\n\nlet promise;\nconst id = \"transition2.json\";\nlet config = {\n  initialMessages: [],\n  widgets: [\n    {\n      widgetName: \"selection\",\n      widgetFunc: (props) => <CheckboxGroup {...props} />,\n    },\n    {\n      widgetName: \"buttons\",\n      widgetFunc: (props) => <Options {...props} />,\n    },\n    {\n      widgetName: \"facts\",\n      widgetFunc: (props) => <Facts  {...props} />,\n    },\n    {\n      widgetName: \"factssaved\",\n      widgetFunc: (props) => <FactsAdded  {...props} />,\n    },\n    {\n      widgetName: \"factsfailed\",\n      widgetFunc: (props) => <FactsFailed  {...props} />,\n    },\n    {\n      widgetName: \"loading\",\n      widgetFunc: (props) => <Loading  {...props} />,\n    },\n    {\n      widgetName: \"info\",\n      widgetFunc: (props) => <Info  {...props} />,\n    },\n  ],\n\n  customComponents: {\n    botAvatar: (props) => <Avatar {...props} />,\n    header: (props) => <Header {...props} />,\n    botChatMessage: (props) => <BotChatMessage {...props} />\n  }\n};\n\nasync function main() {\n  promise = import(`../../configuration/${id}`)\n    .then((data) => {\n      const page = data.pages[0];\n      localStorage.setItem('actualmessage', JSON.stringify(page));\n      const initial = [].concat(...page.example.map((message, key) => {\n        if (message.type === \"bubble\") {\n          return createChatBotMessage(\n            message.content, { delay: 5 * (key * 1000), withAvatar: true }\n          )\n        } if (message.type === \"buttons\") {\n          return createChatBotMessage('',\n            {\n              widget: \"buttons\",\n              delay: 5 * (key * 1000),\n              withAvatar: false\n            }\n          )\n        }\n        return createChatBotMessage('', { withAvatar: false })\n\n      }\n      ));\n      return initial;\n    });\n  config.initialMessages = await promise;\n}\n\nmain();\n\nexport default config;\n","import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\n\nconst FactsAd = (props) => {\n  const actualmessage = JSON.parse(localStorage.getItem(\"actualmessage\"));\n\n  const handleChange = (selected) => {\n    props.actionProvider.showMessage(selected, actualmessage);\n  };\n  return (\n    <div style={{ alignItems: \"center\" }}>\n      <div\n        style={{\n          position: \"relative\",\n          margin: \"10px 40px\",\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n      >\n        <div\n          style={{\n            backgroundColor: \"white\",\n            border: \"1px solid rgb(58, 94, 185)\",\n            borderRadius: \"50px\",\n            position: \"absolute\",\n            top: \"60%\",\n            left: \"2%\",\n            transform: \"translateX(-50%) translateY(-50%)\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            width: \"40px\",\n            height: \"40px\",\n          }}\n        >\n          <svg width=\"30px\" viewBox=\"0 0 122.88 112.92\">\n            <path\n              fill=\"#3a5eb9\"\n              d=\"M15.31,87.55a20.54,20.54,0,0,0,1.23,4.65,12.43,12.43,0,0,0,2.75,4.26c3.88,3.85,8.92,3.84,14.44,3.84v0h2.62c2.27-3.27,7.6-5.56,13.8-5.56,8.27,0,15,4.07,15,9.1s-6.71,9.1-15,9.1c-6.07,0-11.3-2.2-13.65-5.36H33.73c-7.08,0-13.55,0-19.55-5.94A19.78,19.78,0,0,1,9.8,94.93,28.6,28.6,0,0,1,8,87.55a8.2,8.2,0,0,1-8-8.18V49.87a8.2,8.2,0,0,1,8.18-8.18h.58c1.48-15.15,11-27,23.87-34.09A61.85,61.85,0,0,1,57.37.2,58.06,58.06,0,0,1,83.32,3.87c14.45,5.71,26.56,17.84,31.25,37.82h.13a8.2,8.2,0,0,1,8.18,8.18v29.5a8.2,8.2,0,0,1-8.18,8.18h-8.18V42.41C102.33,26,92.29,16,80.38,11.32A50,50,0,0,0,58,8.18a53.66,53.66,0,0,0-21.49,6.39C25.37,20.75,17.24,31,16.58,44.05a4,4,0,0,1-.22,1.15V87.55Z\"\n            />\n          </svg>\n        </div>\n        <div\n          id=\"chatbot-box\"\n          style={{\n            fontSize: \"0.70rem\",\n            padding: \"5px 25px\",\n            textAlign: \"left\",\n            color: \"#54565a\",\n            wordBreak: \"break-word\",\n            position: \"center\",\n            marginTop: \"20px\",\n            marginLeft: \"20px\",\n            fontWeight: \"bold\",\n            borderRadius: \"20px\",\n            border: \"1px solid\",\n            width: \"600px\",\n            borderColor: \"#3a5eb9\",\n          }}\n        >\n          <Box>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              Los hechos adicionados, no generan ninguna coincidencia. Por favor\n              intente de nuevo.\n            </Typography>\n          </Box>\n        </div>\n      </div>\n      <Button\n        variant=\"contained\"\n        size=\"medium\"\n        color=\"primary\"\n        onClick={() => handleChange(\"deletefacts\")}\n        style={{\n          margin: \"20px\",\n          minWidth: \"200px\",\n          textTransform: \"none\",\n          borderRadius: \"10px\",\n          border: \"1px solid\",\n        }}\n      >\n        Eliminar hechos\n      </Button>\n    </div>\n  );\n};\n\nexport default FactsAd;\n","import React from \"react\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\n\nconst FactsAd = () => {\n  return (\n    <div style={{ alignItems: \"center\" }}>\n      <CircularProgress />\n    </div>\n  );\n};\n\nexport default FactsAd;\n","import React from \"react\";\nimport \"./Info.css\";\nimport ReactMarkdown from \"react-markdown\";\n\nconst Info = () => {\n  const comment = JSON.parse(localStorage.getItem(\"comment\"));\n\n  return (\n    <div\n      style={{\n        fontSize: \"0.85rem\",\n        padding: \"5px 25px\",\n        textAlign: \"left\",\n        color: \"#39393a\",\n        wordBreak: \"break-word\",\n        position: \"initial\",\n        marginTop: \"20px\",\n        marginLeft: \"60px\",\n        fontWeight: \"normal\",\n        borderRadius: \"20px\",\n        border: \"1px solid\",\n        width: \"600px\",\n        borderColor: \"#dfe8f2\",\n        backgroundColor: \"#dfe8f2\",\n      }}\n    >\n      <ReactMarkdown>{comment}</ReactMarkdown>\n    </div>\n  );\n};\n\nexport default Info;\n","const id = \"transition2.json\";\n\nclass ActionProvider {\n  constructor(createChatBotMessage, setStateFunc, createClientMessage) {\n    this.createChatBotMessage = createChatBotMessage;\n    this.setState = setStateFunc;\n    this.createClientMessage = createClientMessage;\n  }\n\n  traerDerechos = async () => {\n    this.loading();\n    const factssaved = JSON.parse(localStorage.getItem(\"factssaved\"));\n    const actualmessage = JSON.parse(localStorage.getItem(\"actualmessage\"));\n\n    const url = 'https://languagetutelas1.cognitiveservices.azure.com/language/:query-knowledgebases?projectName=prediccionderecho&api-version=2021-10-01&deploymentName=production'\n    let promises = [];\n    try {\n      let result;\n\n      factssaved.forEach(async (item) => {\n        promises.push(\n          new Promise(async (resolve, reject) => {\n            let data = {\n              top: 3,\n              question: item.description\n            }\n            const response = await fetch(url, {\n              method: \"POST\",\n              headers: {\n                \"Content-type\": \"application/json;charset=UTF-8\",\n                \"Ocp-Apim-Subscription-Key\": \"a6d6d0ce7d104937990e042a289ca17b\"\n              },\n              body: JSON.stringify(data)\n            })\n            result = await response.json()\n            const derechosres = result.answers.map(x => x.answer);\n            resolve(derechosres);\n          })\n        );\n      })\n\n      Promise.all(promises).then(values => {\n        const answers = values.flat()\n        let valuesfil = answers.filter((x) => x !== \"Ninguna\");\n        valuesfil = valuesfil.map(item => item.toLowerCase())\n        valuesfil = valuesfil.map(item => item.charAt(0).toUpperCase() + item.slice(1))\n\n        if (valuesfil.length > 0) {\n          localStorage.setItem('derechos', JSON.stringify(valuesfil));\n          this.nextPage(actualmessage.id);\n\n        } else {\n          localStorage.setItem('derechos', JSON.stringify([]));\n          this.setState((prevState) => ({\n            messages: prevState.messages.filter((message) => message.widget !== 'loading'),\n          }));\n          let factsfailed = this.createChatBotMessage('',\n            {\n              widget: \"factsfailed\",\n            }\n          );\n          this.addMessageToState(factsfailed);\n          this.addMessageToState(this.createChatBotMessage('', {\n            withAvatar: false\n          }\n          ));\n        }\n\n      }).catch(reason => {\n        console.log(reason)\n      });\n\n    } catch (error) {\n\n    }\n\n  }\n\n  nextPage = async (pos) => {\n    import(`../../../configuration/${id}`)\n      .then((data) => {\n        const page = data.pages[pos];\n        let messageBot;\n        let messageButtons;\n        let messageComment;\n        this.setState((prevState) => ({\n          messages: prevState.messages.filter((message) => message.widget !== 'buttons'),\n        }));\n        this.setState((prevState) => ({\n          messages: prevState.messages.filter((message) => message.widget !== 'info'),\n        }));\n\n        localStorage.setItem('actualmessage', JSON.stringify(page));\n        let promises = [];\n\n        page.example.forEach(async (message, key) => {\n          if (message.type === \"bubble\") {\n            promises.push(\n              new Promise((resolve, reject) => {\n                messageBot = this.createChatBotMessage(\n                  message.content, {\n                  delay: 5 * (key * 1000), withAvatar: true,\n                }\n                );\n                resolve(messageBot);\n              })\n            );\n\n\n          } else if (message.type === \"comment\") {\n            localStorage.setItem('comment', JSON.stringify(message.content));\n\n            promises.push(\n              new Promise((resolve, reject) => {\n                //resolve(1);\n                messageComment = this.createChatBotMessage(\"\",\n                  {\n                    delay: 5 * (key * 1000),\n                    widget: \"info\",\n                    withAvatar: false\n                  }\n                );\n                resolve(messageComment);\n              })\n            );\n            promises.push(\n              new Promise((resolve, reject) => {\n                resolve(this.createChatBotMessage('', {\n                  withAvatar: false\n                }\n                ));\n              })\n            );\n          } else if (message.type === \"facts\") {\n            promises.push(\n              new Promise((resolve, reject) => {\n                //resolve(1);\n                messageComment = this.createChatBotMessage('',\n                  {\n                    delay: 5 * (key * 1000),\n                    widget: \"facts\",\n                  }\n                );\n                resolve(messageComment);\n\n              })\n            );\n            promises.push(\n              new Promise((resolve, reject) => {\n                resolve(this.createChatBotMessage('', {\n                  delay: 5 * (key * 1000),\n                  withAvatar: false\n                }\n                ));\n              })\n            );\n\n          }\n          else if (message.type === \"selection\") {\n            promises.push(\n              new Promise(async (resolve, reject) => {\n                let messageSelected = this.createChatBotMessage('',\n                  {\n                    delay: 5 * (key * 1000),\n                    widget: \"selection\",\n                  }\n                );\n                resolve(messageSelected);\n              })\n            );\n            promises.push(\n              new Promise((resolve, reject) => {\n                resolve(this.createChatBotMessage('', {\n                  delay: 5 * (key * 1000),\n                  withAvatar: false\n                }\n                ));\n              })\n            );\n          }\n          else if (message.type === \"buttons\") {\n            if (page.example[key - 1].type !== \"facts\") {\n              promises.push(\n                new Promise((resolve, reject) => {\n                  messageButtons = this.createChatBotMessage('',\n                    {\n                      widget: \"buttons\",\n                      delay: 5 * (key * 1000),\n                      withAvatar: false,\n\n                    }\n                  );\n                  resolve(messageButtons);\n                })\n\n              );\n            }\n          }\n\n        });\n\n        Promise.all(promises).then(values => {\n          values.forEach(item => this.addMessageToState(item));\n          this.setState((prevState) => ({\n            messages: prevState.messages.filter((message) => message.widget !== 'loading'),\n          }));\n        }).catch(reason => {\n          console.log(reason)\n        });\n      });\n  }\n\n  loading = () => {\n    let loading = this.createChatBotMessage('',\n      {\n        widget: \"loading\",\n      }\n    );\n    this.addMessageToState(loading);\n    this.addMessageToState(this.createChatBotMessage('', {\n      withAvatar: false\n    }\n    ));\n  }\n\n  handleActionButton = () => {\n    const urlpdf = 'https://cdn.rawgit.com/yohatu14/files/79da21ecf0e7ddabed60df840d9e4dd8aca3dc93/Anexo4%20ABCDE%20de%20la%20Accio%CC%81n%20de%20Tutela.pdf'\n    window.open(urlpdf, '_blank', 'noopener,noreferrer');\n  }\n\n  backPage = async (pos) => {\n    import(`../../../configuration/${id}`)\n      .then((data) => {\n        const backpage = data.pages[pos - 1];\n        const back2page = data.pages[pos - 2];\n\n        localStorage.setItem('actualmessage', JSON.stringify(back2page));\n\n        backpage.example.forEach((object) => {\n          if (object.type === \"buttons\") {\n            this.setState((prevState) => ({\n              messages: prevState.messages.filter((message) => message.widget !== 'buttons'),\n            }));\n          }\n          if (object.type === \"facts\") {\n            this.setState((prevState) => ({\n              messages: prevState.messages.filter((message) => message.widget !== 'factssaved'),\n            }));\n            this.setState((prevState) => ({\n              messages: prevState.messages.filter((message) => message.widget !== 'facts'),\n            }));\n          }\n\n          if (object.type === \"selection\") {\n            this.setState((prevState) => ({\n              messages: prevState.messages.filter((message) => message.widget !== 'selection'),\n            }));\n          }\n        });\n\n        backpage.example.forEach((value) => {\n          this.setState((prevState) => ({\n            messages: prevState.messages.filter((message) => message.message !== value.content)\n          }));\n        });\n\n        let messageButtons = this.createChatBotMessage('',\n          {\n            widget: \"buttons\",\n            key: Math.random()\n          }\n        );\n        this.addMessageToState(messageButtons);\n\n      });\n  }\n\n  addMessageToState = (message) => {\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        messages: [...prevState.messages, message],\n      }\n    });\n  };\n\n  removeComment = () => {\n    this.setState((prevState) => ({\n      messages: prevState.messages.filter((message) => message.widget !== 'info'),\n    }));\n  }\n\n  saveFacts = (factsList) => {\n    localStorage.setItem('factssaved', JSON.stringify(factsList));\n    this.setState((prevState) => ({\n      messages: prevState.messages.filter((message) => message.widget !== 'facts'),\n    }));\n    let factsSaved = this.createChatBotMessage('',\n      {\n        delay: 1000,\n        widget: \"factssaved\",\n      }\n    );\n    this.addMessageToState(factsSaved);\n\n    this.addMessageToState(this.createChatBotMessage('', {\n      delay: 2000,\n      withAvatar: false\n    }\n    ));\n\n  }\n  removeFacts = () => {\n    localStorage.removeItem('factssaved');\n    localStorage.removeItem('derechos');\n    this.setState((prevState) => ({\n      messages: prevState.messages.filter((message) => message.widget !== 'factssaved'),\n    }));\n    let comment = this.createChatBotMessage('',\n      {\n        delay: 1000,\n        widget: \"info\",\n      }\n    );\n    this.addMessageToState(comment);\n    this.addMessageToState(this.createChatBotMessage('', {\n      delay: 2000,\n      withAvatar: false\n    }\n    ));\n    let facts = this.createChatBotMessage('',\n      {\n        delay: 1000,\n        widget: \"facts\",\n      }\n    );\n    this.addMessageToState(facts);\n\n    this.addMessageToState(this.createChatBotMessage('', {\n      delay: 2000,\n      withAvatar: false\n    }\n    ));\n\n    this.setState((prevState) => ({\n      messages: prevState.messages.filter((message) => message.widget !== 'factsfailed'),\n    }));\n  }\n\n  showMessage = (selected, actualmessage) => {\n    if (selected.id === \"next\") {\n      this.nextPage(actualmessage.id)\n    } else if (selected.id === \"action\") {\n      this.handleActionButton()\n    } else if (selected.id === \"previous\") {\n      this.backPage(actualmessage.id)\n    } else if (selected === \"deletefacts\") {\n      this.removeFacts();\n    } else if (selected === \"nextfacts\") {\n      this.traerDerechos()\n    } else if (selected === \"newfacts\") {\n      this.removeFacts();\n    }\n  }\n\n}\n\nexport default ActionProvider;\n","class MessageParser {\n  constructor(actionProvider,state) {\n    this.actionProvider = actionProvider;\n    this.state = state;\n  }\n  parse(message) {\n    this.actionProvider.greet(message);\n  }\n}\n\nexport default MessageParser;\n","import React, { useState } from 'react';\nimport Chatbot from \"react-chatbot-kit\";\nimport config from \"../../configuration/config\";\nimport ActionProvider from \"../../features/Actions/ActionProvider\";\nimport MessageParser from \"../../features/Actions/MessageParser\";\nimport \"./Chatbot.css\";\n\nfunction App() {\n  const [count, setCount] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <div style={{ position: \"fixed\", maxWidth: \"100%\", right: \"25px\", bottom: \"80px\" }}>\n        {count === true && <Chatbot\n          config={config}\n          placeholderText=\"Haz una pregunta\"\n          actionProvider={ActionProvider}\n          messageParser={MessageParser}\n        />}\n\n        <button\n          className=\"app-chatbot-button\"\n          onClick={() => { if (count === true) { } setCount(!count) }}\n        >\n          {count === false ?\n            <>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" class=\"app-chatbot-button-icon\"><path d=\"M256 288c79.5 0 144-64.5 144-144S335.5 0 256 0 112 64.5 112 144s64.5 144 144 144zm128 32h-55.1c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16H128C57.3 320 0 377.3 0 448v16c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48v-16c0-70.7-57.3-128-128-128z\"></path></svg>\n            </>\n            :\n            <><svg className=\"app-chatbot-button-icon\" viewBox=\"0 0 1000 1000\"  >\n              <path d=\"M549.3,501.5l151.3-149.7c13.8-13.6,13.9-35.7,0.3-49.5c-13.6-13.8-35.8-13.9-49.5-0.3L499.9,451.9L350.6,302.2c-13.7-13.7-35.8-13.8-49.5-0.1c-13.7,13.6-13.7,35.8-0.1,49.5l149,149.5L299.8,649.8c-13.8,13.6-13.9,35.7-0.3,49.5c6.9,6.9,15.9,10.4,24.9,10.4c8.9,0,17.8-3.4,24.6-10.1l150.5-148.8l151.7,152.2c6.8,6.9,15.8,10.3,24.8,10.3c9,0,17.9-3.4,24.7-10.2c13.7-13.7,13.7-35.8,0.1-49.5L549.3,501.5z\" />\n            </svg>\n              <b>cerrar</b></>\n          }\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Chatbot from './Chatbot/views/Chatbot/Chatbot';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Chatbot />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","var map = {\n\t\"./configapi\": [\n\t\t84,\n\t\t9,\n\t\t0\n\t],\n\t\"./configapi.js\": [\n\t\t84,\n\t\t9,\n\t\t0\n\t],\n\t\"./transition\": [\n\t\t85,\n\t\t3,\n\t\t1\n\t],\n\t\"./transition.json\": [\n\t\t85,\n\t\t3,\n\t\t1\n\t],\n\t\"./transition2\": [\n\t\t86,\n\t\t3,\n\t\t2\n\t],\n\t\"./transition2.json\": [\n\t\t86,\n\t\t3,\n\t\t2\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[2]).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1])\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 61;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}