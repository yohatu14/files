{"version":3,"sources":["Chatbot/components/Avatar/Avatar.js","Chatbot/layout/Header/Header.js","Chatbot/features/Message/MessageBot.jsx","Chatbot/components/Options/Options.jsx","Chatbot/components/DatePicker/DatePicker.jsx","Chatbot/components/FillInformation/FillInformation.jsx","Chatbot/components/Facts/Facts.jsx","Chatbot/components/CheckboxGroup/CheckboxGroup.jsx","Chatbot/components/CheckboxSelected/CheckboxSelected.jsx","Chatbot/components/FactsAdded/FactsAdded.jsx","Chatbot/components/FactsFailed/FactsFailed.jsx","Chatbot/components/Loading/Loading.jsx","Chatbot/components/Info/Info.jsx","Chatbot/components/Provisional/Provisional.jsx","Chatbot/components/Evidences/Evidences.jsx","Chatbot/components/Pretentions/Pretentions.jsx","Chatbot/components/AddPretentions/AddPretentions.jsx","Chatbot/components/SelectSpecial/SelectSpecial.jsx","Chatbot/components/PretentionsSelected/PretentionsSelected.jsx","Chatbot/components/Initial/Initial.jsx","Chatbot/components/ListPretentionsSelected/ListPretentionsSelected.jsx","Chatbot/configuration/config.js","Chatbot/features/Actions/ActionProvider.js","Chatbot/features/Actions/MessageParser.js","Chatbot/views/Chatbot/Chatbot.js","serviceWorker.js","index.js","configuration lazy /^/.//.*$/ groupOptions: {} namespace object"],"names":["BotAvatar","props","id","className","style","backgroundColor","border","borderColor","borderRadius","width","viewBox","fill","d","Header","MessageBot","message","trim","fontSize","padding","textAlign","color","wordBreak","position","marginTop","marginLeft","fontWeight","components","p","children","a","node","href","properties","target","rel","img","src","alt","Options","actualmessage","JSON","parse","localStorage","getItem","example","pos","findIndex","object","key","type","content","length","options","buttonsMarkup","map","option","sx","height","display","Button","variant","size","onClick","selected","actionProvider","showMessage","margin","minWidth","textTransform","text","DatePickerComponent","year","month","onChangeYear","onChangeMonth","defaultValue","reverse","required","value","onChange","name","classes","optionClasses","numeric","endYearGiven","FillInformation","i","Facts","useState","description","descriptionArray","setDescriptionArray","loadingButton","setLoadingButton","empty","setEmpty","handleAdddescription","newElement","parseInt","handleRemovedescription","array","filter","item","isEmpty","objectsArray","wasNull","handleSave","removeComponent","saveFacts","des","top","left","transform","justifyContent","alignItems","TextField","e","event","handleUpdateDescription","multiline","rows","placeholder","DatePicker","handleSetYear","handleSetMonth","CircularProgress","CheckboxGroup","React","elements","setElements","useEffect","newlist","element","handleChange","indexOf","rightsselected","undefined","setItem","stringify","Box","flexDirection","bgcolor","Typography","gutterBottom","CheckboxGroupSelected","list","FactsAd","factssaved","showButtons","setButtons","Info","comment","Provisional","removeItem","setShowButtons","buttons","disabled","provisional","setProvisional","prevState","console","log","Evidences","result","handleClick","Pretentions","AddPretentions","pretention","pretentionArray","handleAddpretention","pretentionsadded","handleRemovepretention","SelectSpecial","PretentionsSelected","pretentionsselected","Initial","initialFuntion","then","data","page","pages","forEach","msg","addBubble","addMessageToState","addComponent","ListPretentionsSelected","config","initialMessages","createChatBotMessage","withAvatar","widget","widgets","widgetName","widgetFunc","CheckboxSelected","FactsFailed","Loading","customComponents","botAvatar","Avatar","header","botChatMessage","ActionProvider","setStateFunc","createClientMessage","traerDerechos","loading","promises","push","Promise","resolve","reject","question","fetch","method","headers","body","response","json","derechosres","answers","x","answer","all","values","valuesfil","flat","toLowerCase","charAt","toUpperCase","slice","traerPretensiones","nextPage","factsfailed","catch","reason","error","derechos","mapeo","respuesta","concat","Set","delay","addBlank","messageSelected","setState","messages","handleActionButton","window","open","backPage","page2","factsList","factsSaved","removeFacts","facts","addProvisional","posPretentions","posFacts","posAddPretentions","warning","button","page3","page4","this","MessageParser","state","greet","App","count","setCount","maxWidth","right","bottom","placeholderText","messageParser","xmlns","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","webpackAsyncContext","req","__webpack_require__","o","Error","code","ids","t","keys","Object","module","exports"],"mappings":"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","file":"static/js/main.f759a6ba.chunk.js","sourcesContent":["import React from \"react\";\n\nconst BotAvatar = (props) => {\n  return (\n    <div id=\"avatar-bot\" className=\"react-chatbot-kit-chat-bot-avatar-container\" style={{\n      backgroundColor: \"white\", border: \"1px solid\", borderColor: \"#3a5eb9\",\n      borderRadius: \"50px\"\n    }}>\n      <svg width=\"30px\" viewBox=\"0 0 122.88 112.92\" ><path fill=\"#3a5eb9\" d=\"M15.31,87.55a20.54,20.54,0,0,0,1.23,4.65,12.43,12.43,0,0,0,2.75,4.26c3.88,3.85,8.92,3.84,14.44,3.84v0h2.62c2.27-3.27,7.6-5.56,13.8-5.56,8.27,0,15,4.07,15,9.1s-6.71,9.1-15,9.1c-6.07,0-11.3-2.2-13.65-5.36H33.73c-7.08,0-13.55,0-19.55-5.94A19.78,19.78,0,0,1,9.8,94.93,28.6,28.6,0,0,1,8,87.55a8.2,8.2,0,0,1-8-8.18V49.87a8.2,8.2,0,0,1,8.18-8.18h.58c1.48-15.15,11-27,23.87-34.09A61.85,61.85,0,0,1,57.37.2,58.06,58.06,0,0,1,83.32,3.87c14.45,5.71,26.56,17.84,31.25,37.82h.13a8.2,8.2,0,0,1,8.18,8.18v29.5a8.2,8.2,0,0,1-8.18,8.18h-8.18V42.41C102.33,26,92.29,16,80.38,11.32A50,50,0,0,0,58,8.18a53.66,53.66,0,0,0-21.49,6.39C25.37,20.75,17.24,31,16.58,44.05a4,4,0,0,1-.22,1.15V87.55Z\" /></svg>    </div >\n  );\n};\n\nexport default BotAvatar;\n","import React from 'react';\nconst Header = (props) => {\n  return (\n    <div className={\"react-chatbot-kit-chat-header\"}>\n\n      ChatBot CSJ\n\n    </div>\n\n  );\n};\n\n\nexport default Header;","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\n\nconst MessageBot = (props) => {\n  return (\n    props.message.trim() && (\n      <div\n        id=\"chatbot-box\"\n        style={{\n          fontSize: \"0.85rem\",\n          padding: \"5px 30px\",\n          textAlign: \"left\",\n          color: \"#39393a\",\n          wordBreak: \"break-word\",\n          position: \"initial\",\n          marginTop: \"20px\",\n          marginLeft: \"20px\",\n          fontWeight: \"normal\",\n          borderRadius: \"20px\",\n          border: \"1px solid\",\n          width: \"700px\",\n          borderColor: \"#3a5eb9\",\n        }}\n      >\n        {props.message !== \"\" && (\n          <ReactMarkdown\n            components={{\n              p: ({ children }) => {\n                return <p>{children}</p>;\n              },\n              a: ({ node, children }) => {\n                // eslint-disable-next-line react/jsx-no-target-blank\n                return (\n                  <a\n                    href={`${node.properties.href}`}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {children}\n                  </a>\n                );\n              },\n              img: ({ node }) => {\n                return (\n                  // eslint-disable-next-line react/jsx-no-target-blank\n                  <a\n                    href={`${node.properties.src}`}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <img\n                      src={`${node.properties.src}`}\n                      alt={node.properties.alt}\n                      width=\"170\"\n                    />\n                  </a>\n                );\n              },\n            }}\n          >\n            {props.message}\n          </ReactMarkdown>\n        )}\n      </div>\n    )\n  );\n};\nexport default MessageBot;\n","import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport DownloadForOfflineOutlinedIcon from \"@mui/icons-material/DownloadForOfflineOutlined\";\nimport \"./Options.css\";\n\nconst Options = (props) => {\n  const actualmessage = JSON.parse(localStorage.getItem(\"actualmessage\"));\n  const example = actualmessage.example;\n\n  // eslint-disable-next-line array-callback-return\n  const pos = example.findIndex((object, key) => {\n    if (object.type === \"buttons\") {\n      return object.content;\n    }\n    if (key === example.length - 1) {\n      return -1;\n    }\n  });\n  const options = pos !== -1 ? example[pos].content : [];\n  const handleChange = (selected) => {\n    props.actionProvider.showMessage(selected, actualmessage);\n  };\n\n  const buttonsMarkup =\n    options.length > 0 &&\n    options.map((option) => (\n      <>\n        {option.id === \"download\" && (\n          <DownloadForOfflineOutlinedIcon\n            color=\"primary\"\n            sx={{ height: \"70px\", width: \"70px\", display: \"inline-block\" }}\n          />\n        )}\n        <Button\n          variant=\"contained\"\n          size=\"medium\"\n          color=\"primary\"\n          onClick={() => handleChange(option)}\n          style={{\n            margin: \"20px\",\n            minWidth: \"200px\",\n            textTransform: \"none\",\n            borderRadius: \"10px\",\n            border: \"1px solid\",\n            display: \"inline-block\",\n          }}\n        >\n          {option.text}\n        </Button>\n      </>\n    ));\n\n  return <div className=\"options-container\">{buttonsMarkup}</div>;\n};\n\nexport default Options;\n","import React from \"react\";\nimport { YearPicker, MonthPicker } from \"react-dropdown-date\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst DatePickerComponent = ({ year, month, onChangeYear, onChangeMonth }) => {\n  return (\n    <div\n      style={{\n        display: \"block\",\n        padding: 5,\n        width: \"min-content\",\n      }}\n    >\n      <YearPicker\n        defaultValue={\"Año\"}\n        reverse // default is ASCENDING\n        required={true} // default is false\n        value={year} // mandatory\n        onChange={onChangeYear}\n        id={\"year\"}\n        name={\"year\"}\n        classes={\"classes\"}\n        optionClasses={\"option classes\"}\n      />\n      <MonthPicker\n        defaultValue={\"Mes\"}\n        numeric // to get months as numbers\n        endYearGiven // mandatory if end={} is given in YearPicker\n        year={year} // mandatory\n        required={true} // default is false\n        value={month} // mandatory\n        onChange={onChangeMonth}\n        id={\"month\"}\n        name={\"month\"}\n        classes={\"classes\"}\n        optionClasses={\"option classes\"}\n      />\n    </div>\n  );\n};\n\nexport default DatePickerComponent;\n","import React from \"react\";\nimport \"./FillInformation.css\";\n\nconst FillInformation = () => {\n  return (\n    <div\n      style={{\n        fontSize: \"0.85rem\",\n        padding: \"5px 25px\",\n        textAlign: \"left\",\n        color: \"#39393a\",\n        wordBreak: \"break-word\",\n        position: \"initial\",\n        marginTop: \"20px\",\n        marginLeft: \"60px\",\n        fontWeight: \"normal\",\n        borderRadius: \"20px\",\n        border: \"1px solid\",\n        width: \"600px\",\n        borderColor: \"#dfe8f2\",\n        backgroundColor: \"#ffe6a7\",\n      }}\n    >\n      Por favor llene la información solicitada.\n    </div>\n  );\n};\n\nexport default FillInformation;\n","import React, { useState } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport DatePickerComponent from \"../DatePicker/DatePicker\";\nimport Button from \"@mui/material/Button\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport FillInformation from \"../FillInformation/FillInformation\";\n\nimport \"./Facts.css\";\n\nconst Facts = (props) => {\n  const [descriptionArray, setDescriptionArray] = useState([\n    { year: \"\", month: \"\", description: \"\", id: 0 },\n  ]);\n  const [loadingButton, setLoadingButton] = useState(false);\n  const [empty, setEmpty] = useState(false);\n\n  const handleSetYear = (event, key) => {\n    descriptionArray[key].year = event;\n    setDescriptionArray((descriptionArray) => [...descriptionArray]);\n  };\n\n  const handleSetMonth = (event, key) => {\n    descriptionArray[key].month = event;\n    setDescriptionArray((descriptionArray) => [...descriptionArray]);\n  };\n\n  const handleUpdateDescription = (event, key) => {\n    descriptionArray[key].description = event.target.value;\n    setDescriptionArray((descriptionArray) => [...descriptionArray]);\n  };\n\n  const handleAdddescription = () => {\n    const newElement = {\n      year: \"\",\n      month: \"\",\n      description: \"\",\n      id: parseInt(descriptionArray.length),\n    };\n    setDescriptionArray((descriptionArray) => [\n      ...descriptionArray,\n      newElement,\n    ]);\n  };\n\n  const handleRemovedescription = async (pos) => {\n    const array = descriptionArray.filter((item) => item.id !== pos);\n    await setDescriptionArray(array);\n  };\n\n  const isEmpty = (objectsArray) => {\n    var wasNull = false;\n    for (var i in objectsArray) {\n      if (objectsArray[i].description === \"\") wasNull = true;\n    }\n    if (wasNull) return true;\n    else return false;\n  };\n\n  const handleSave = async (array) => {\n    const result = isEmpty(array);\n\n    if (!result) {\n      setEmpty(false);\n      setLoadingButton(true);\n      props.actionProvider.removeComponent(\"info\");\n      props.actionProvider.saveFacts(array);\n    } else {\n      setEmpty(true);\n    }\n  };\n\n  return (\n    <div>\n      {descriptionArray.map((des, key) => {\n        return (\n          <div className=\"facts-container\">\n            <div className=\"facts-message-content\">\n              <div\n                style={{\n                  position: \"relative\",\n                  margin: \"10px 10px\",\n                  display: \"inline-block\",\n                }}\n              >\n                <div\n                  style={{\n                    backgroundColor: \"white\",\n                    border: \"1px solid rgb(58, 94, 185)\",\n                    borderRadius: \"50px\",\n                    position: \"absolute\",\n                    top: \"60%\",\n                    left: \"5%\",\n                    transform: \"translateX(-50%) translateY(-50%)\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    width: \"40px\",\n                    height: \"40px\",\n                  }}\n                >\n                  <svg width=\"30px\" viewBox=\"0 0 512 512\">\n                    <path\n                      fill=\"#3a5eb9\"\n                      d=\"M256 288c79.5 0 144-64.5 144-144S335.5 0 256 0 112 64.5 112 144s64.5 144 144 144zm128 32h-55.1c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16H128C57.3 320 0 377.3 0 448v16c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48v-16c0-70.7-57.3-128-128-128z\"\n                    ></path>\n                  </svg>\n                </div>\n                <div>\n                  <TextField\n                    value={des.description}\n                    onChange={(e) => handleUpdateDescription(e, key)}\n                    sx={{ padding: 2 }}\n                    multiline\n                    rows={4}\n                    placeholder=\"Descripción de los hechos...\"\n                    style={{\n                      fontSize: \"0.70rem\",\n                      padding: \"5px 25px\",\n                      textAlign: \"left\",\n                      color: \"#39393a\",\n                      wordBreak: \"break-word\",\n                      position: \"initial\",\n                      marginTop: \"20px\",\n                      marginLeft: \"20px\",\n                      fontWeight: \"bold\",\n                      borderRadius: \"20px\",\n                      border: \"1px solid\",\n                      width: \"300px\",\n                      borderColor: \"#3a5eb9\",\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"facts-message-content\">\n              <DatePickerComponent\n                year={des.year}\n                month={des.month}\n                onChangeYear={(e) => handleSetYear(e, key)}\n                onChangeMonth={(e) => handleSetMonth(e, key)}\n              />\n            </div>\n            <div className=\"facts-message-content\">\n              {key === 0 && descriptionArray.length > 1 ? (\n                <Button\n                  variant=\"contained\"\n                  size=\"small\"\n                  color=\"primary\"\n                  onClick={() => handleRemovedescription(key)}\n                  style={{\n                    margin: \"5px\",\n                    minWidth: \"150px\",\n                    textTransform: \"none\",\n                    borderRadius: \"10px\",\n                    border: \"1px solid\",\n                  }}\n                >\n                  Eliminar este hecho\n                </Button>\n              ) : key === 0 && descriptionArray.length === 1 ? (\n                <Button\n                  variant=\"contained\"\n                  size=\"small\"\n                  color=\"primary\"\n                  onClick={() => handleAdddescription()}\n                  style={{\n                    margin: \"5px\",\n                    minWidth: \"200px\",\n                    textTransform: \"none\",\n                    borderRadius: \"10px\",\n                    border: \"1px solid\",\n                  }}\n                >\n                  Agregar más hechos\n                </Button>\n              ) : key > 0 && descriptionArray.length > 0 ? (\n                <div style={{ width: \"min-content\" }}>\n                  <Button\n                    variant=\"contained\"\n                    size=\"small\"\n                    color=\"primary\"\n                    onClick={() => handleRemovedescription(key)}\n                    style={{\n                      margin: \"5px\",\n                      minWidth: \"150px\",\n                      textTransform: \"none\",\n                      borderRadius: \"10px\",\n                      border: \"1px solid\",\n                    }}\n                  >\n                    Eliminar este hecho\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    size=\"small\"\n                    color=\"primary\"\n                    onClick={() => handleAdddescription()}\n                    style={{\n                      margin: \"5px\",\n                      minWidth: \"150px\",\n                      textTransform: \"none\",\n                      borderRadius: \"10px\",\n                      border: \"1px solid\",\n                    }}\n                  >\n                    Agregar más hechos\n                  </Button>\n                </div>\n              ) : null}\n            </div>\n          </div>\n        );\n      })}\n\n      <div style={{ alignItems: \"center\" }}>{empty && <FillInformation />}</div>\n      <div style={{ alignItems: \"center\" }}>\n        {!loadingButton ? (\n          <Button\n            variant=\"contained\"\n            size=\"medium\"\n            color=\"primary\"\n            onClick={() => handleSave(descriptionArray)}\n            style={{\n              margin: \"20px\",\n              minWidth: \"200px\",\n              textTransform: \"none\",\n              borderRadius: \"10px\",\n              border: \"1px solid\",\n            }}\n          >\n            Guardar hechos\n          </Button>\n        ) : (\n          <CircularProgress />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Facts;\n","import React, { useEffect } from \"react\";\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\n\nconst CheckboxGroup = ({ props }) => {\n  // Checkbox Group\n  const [elements, setElements] = React.useState({});\n\n  useEffect(() => {\n    const list = JSON.parse(localStorage.getItem(\"derechos\"));\n    const newlist = list.map((object) => {\n      return { element: object, value: false };\n    });\n\n    setElements(newlist);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleChange = (value) => {\n    const pos = elements.map((object) => object.element).indexOf(value);\n    elements[pos].value = !elements[pos].value;\n    setElements((elements) => [...elements]);\n    // eslint-disable-next-line array-callback-return\n    let rightsselected = elements.map((item) => {\n      if (item.value) {\n        return item.element;\n      }\n    });\n    rightsselected = rightsselected.filter((item) => item !== undefined);\n\n    localStorage.setItem(\"rightsselected\", JSON.stringify(rightsselected));\n  };\n\n  return (\n    <div\n      style={{\n        position: \"relative\",\n        margin: \"10px 40px\",\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n      }}\n    >\n      <div\n        style={{\n          backgroundColor: \"white\",\n          border: \"1px solid rgb(58, 94, 185)\",\n          borderRadius: \"50px\",\n          position: \"absolute\",\n          top: \"60%\",\n          left: \"2%\",\n          transform: \"translateX(-50%) translateY(-50%)\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          width: \"40px\",\n          height: \"40px\",\n        }}\n      >\n        <svg width=\"30px\" viewBox=\"0 0 512 512\">\n          <path\n            fill=\"#3a5eb9\"\n            d=\"M256 288c79.5 0 144-64.5 144-144S335.5 0 256 0 112 64.5 112 144s64.5 144 144 144zm128 32h-55.1c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16H128C57.3 320 0 377.3 0 448v16c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48v-16c0-70.7-57.3-128-128-128z\"\n          ></path>\n        </svg>\n      </div>\n      <div\n        id=\"chatbot-box\"\n        style={{\n          fontSize: \"0.70rem\",\n          padding: \"5px 25px\",\n          textAlign: \"left\",\n          color: \"#54565a\",\n          wordBreak: \"break-word\",\n          position: \"initial\",\n          marginTop: \"20px\",\n          marginLeft: \"20px\",\n          fontWeight: \"normal\",\n          borderRadius: \"20px\",\n          border: \"1px solid\",\n          width: \"600px\",\n          borderColor: \"#3a5eb9\",\n        }}\n      >\n        {elements.length > 0\n          ? elements.map((item) => {\n              return (\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    bgcolor: \"background.paper\",\n                  }}\n                >\n                  {!item.value && (\n                    <CheckBoxOutlineBlankIcon\n                      color=\"#1976d2\"\n                      size={30}\n                      onClick={() => handleChange(item.element)}\n                    />\n                  )}\n                  {item.value && (\n                    <CheckBoxIcon\n                      color={\"primary\"}\n                      size={30}\n                      onClick={() => handleChange(item.element)}\n                    />\n                  )}\n                  <Typography variant=\"bodyRegular\" gutterBottom>\n                    {item.element}\n                  </Typography>\n                </Box>\n              );\n            })\n          : null}\n      </div>\n    </div>\n  );\n};\n\nexport default CheckboxGroup;\n","import React from \"react\";\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\n\nconst CheckboxGroupSelected = () => {\n  // Checkbox Group\n  const list = JSON.parse(localStorage.getItem(\"rightsselected\"));\n  return (\n    <div\n      style={{\n        position: \"relative\",\n        margin: \"10px 40px\",\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n      }}\n    >\n      <div\n        style={{\n          backgroundColor: \"white\",\n          border: \"1px solid rgb(58, 94, 185)\",\n          borderRadius: \"50px\",\n          position: \"absolute\",\n          top: \"60%\",\n          left: \"2%\",\n          transform: \"translateX(-50%) translateY(-50%)\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          width: \"40px\",\n          height: \"40px\",\n        }}\n      >\n        <svg width=\"30px\" viewBox=\"0 0 512 512\">\n          <path\n            fill=\"#3a5eb9\"\n            d=\"M256 288c79.5 0 144-64.5 144-144S335.5 0 256 0 112 64.5 112 144s64.5 144 144 144zm128 32h-55.1c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16H128C57.3 320 0 377.3 0 448v16c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48v-16c0-70.7-57.3-128-128-128z\"\n          ></path>\n        </svg>\n      </div>\n      <div\n        id=\"chatbot-box\"\n        style={{\n          fontSize: \"0.70rem\",\n          padding: \"5px 25px\",\n          textAlign: \"left\",\n          color: \"#54565a\",\n          wordBreak: \"break-word\",\n          position: \"initial\",\n          marginTop: \"20px\",\n          marginLeft: \"20px\",\n          fontWeight: \"normal\",\n          borderRadius: \"20px\",\n          border: \"1px solid\",\n          width: \"600px\",\n          borderColor: \"#3a5eb9\",\n        }}\n      >\n        {list.length &&\n          list.map((item) => {\n            return (\n              item && (\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    bgcolor: \"background.paper\",\n                  }}\n                >\n                  <CheckBoxIcon color={\"primary\"} size={30} />\n                  <Typography variant=\"bodyRegular\" gutterBottom>\n                    {item}\n                  </Typography>\n                </Box>\n              )\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default CheckboxGroupSelected;\n","import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\n\nimport \"./FactsAdded.css\";\n\nconst FactsAd = (props) => {\n  const factssaved = JSON.parse(localStorage.getItem(\"factssaved\"));\n  const actualmessage = JSON.parse(localStorage.getItem(\"actualmessage\"));\n  const [showButtons, setButtons] = React.useState(true);\n\n  const handleChange = async (selected) => {\n    setButtons(false);\n    props.actionProvider.showMessage(selected, actualmessage);\n  };\n\n  return (\n    <div style={{ alignItems: \"center\" }}>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        Hechos adicionados:\n      </Typography>\n      {factssaved.length > 0\n        ? factssaved.map((item) => {\n            return (\n              <div\n                style={{\n                  position: \"relative\",\n                  margin: \"10px 40px\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <div\n                  style={{\n                    backgroundColor: \"white\",\n                    border: \"1px solid rgb(58, 94, 185)\",\n                    borderRadius: \"50px\",\n                    position: \"absolute\",\n                    top: \"60%\",\n                    left: \"4%\",\n                    transform: \"translateX(-50%) translateY(-50%)\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    width: \"40px\",\n                    height: \"40px\",\n                  }}\n                >\n                  <svg width=\"30px\" viewBox=\"0 0 512 512\">\n                    <path\n                      fill=\"#3a5eb9\"\n                      d=\"M256 288c79.5 0 144-64.5 144-144S335.5 0 256 0 112 64.5 112 144s64.5 144 144 144zm128 32h-55.1c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16H128C57.3 320 0 377.3 0 448v16c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48v-16c0-70.7-57.3-128-128-128z\"\n                    ></path>\n                  </svg>\n                </div>\n                <div\n                  id=\"chatbot-box\"\n                  style={{\n                    fontSize: \"0.85rem\",\n                    padding: \"5px 25px\",\n                    textAlign: \"left\",\n                    color: \"#54565a\",\n                    wordBreak: \"break-word\",\n                    position: \"center\",\n                    marginTop: \"20px\",\n                    marginLeft: \"20px\",\n                    fontWeight: \"normal\",\n                    borderRadius: \"20px\",\n                    border: \"1px solid\",\n                    width: \"600px\",\n                    borderColor: \"#3a5eb9\",\n                  }}\n                >\n                  <Box\n                    sx={{\n                      display: \"block\",\n                      flexDirection: \"row\",\n                      bgcolor: \"background.paper\",\n                      margin: 2,\n                    }}\n                  >\n                    <Box>\n                      <Typography variant=\"bodyRegular\" gutterBottom>\n                        Descripción: {item.description}\n                      </Typography>\n                    </Box>\n                    {item.year && item.month && (\n                      <Box>\n                        <Typography variant=\"bodyRegular\" gutterBottom>\n                          Fecha: {item.year}/{item.month}\n                        </Typography>\n                      </Box>\n                    )}\n\n                    <br></br>\n                  </Box>\n                </div>\n              </div>\n            );\n          })\n        : null}\n\n      {showButtons && (\n        <div style={{ alignItems: \"center\" }}>\n          <Button\n            variant=\"contained\"\n            size=\"medium\"\n            color=\"primary\"\n            onClick={() => handleChange(\"deletefacts\")}\n            style={{\n              margin: \"20px\",\n              minWidth: \"200px\",\n              textTransform: \"none\",\n              borderRadius: \"10px\",\n              border: \"1px solid\",\n            }}\n          >\n            Eliminar hechos\n          </Button>\n          <Button\n            variant=\"contained\"\n            size=\"medium\"\n            color=\"primary\"\n            onClick={() => handleChange(\"nextfacts\")}\n            style={{\n              margin: \"20px\",\n              minWidth: \"200px\",\n              textTransform: \"none\",\n              borderRadius: \"10px\",\n              border: \"1px solid\",\n            }}\n          >\n            Continuar\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FactsAd;\n","import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\n\nconst FactsAd = (props) => {\n  const actualmessage = JSON.parse(localStorage.getItem(\"actualmessage\"));\n\n  const handleChange = (selected) => {\n    props.actionProvider.showMessage(selected, actualmessage);\n  };\n  return (\n    <div style={{ alignItems: \"center\" }}>\n      <div\n        style={{\n          position: \"relative\",\n          margin: \"10px 40px\",\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n      >\n        <div\n          style={{\n            backgroundColor: \"white\",\n            border: \"1px solid rgb(58, 94, 185)\",\n            borderRadius: \"50px\",\n            position: \"absolute\",\n            top: \"60%\",\n            left: \"2%\",\n            transform: \"translateX(-50%) translateY(-50%)\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            width: \"40px\",\n            height: \"40px\",\n          }}\n        >\n          <svg width=\"30px\" viewBox=\"0 0 122.88 112.92\">\n            <path\n              fill=\"#3a5eb9\"\n              d=\"M15.31,87.55a20.54,20.54,0,0,0,1.23,4.65,12.43,12.43,0,0,0,2.75,4.26c3.88,3.85,8.92,3.84,14.44,3.84v0h2.62c2.27-3.27,7.6-5.56,13.8-5.56,8.27,0,15,4.07,15,9.1s-6.71,9.1-15,9.1c-6.07,0-11.3-2.2-13.65-5.36H33.73c-7.08,0-13.55,0-19.55-5.94A19.78,19.78,0,0,1,9.8,94.93,28.6,28.6,0,0,1,8,87.55a8.2,8.2,0,0,1-8-8.18V49.87a8.2,8.2,0,0,1,8.18-8.18h.58c1.48-15.15,11-27,23.87-34.09A61.85,61.85,0,0,1,57.37.2,58.06,58.06,0,0,1,83.32,3.87c14.45,5.71,26.56,17.84,31.25,37.82h.13a8.2,8.2,0,0,1,8.18,8.18v29.5a8.2,8.2,0,0,1-8.18,8.18h-8.18V42.41C102.33,26,92.29,16,80.38,11.32A50,50,0,0,0,58,8.18a53.66,53.66,0,0,0-21.49,6.39C25.37,20.75,17.24,31,16.58,44.05a4,4,0,0,1-.22,1.15V87.55Z\"\n            />\n          </svg>\n        </div>\n        <div\n          id=\"chatbot-box\"\n          style={{\n            fontSize: \"0.70rem\",\n            padding: \"5px 25px\",\n            textAlign: \"left\",\n            color: \"#54565a\",\n            wordBreak: \"break-word\",\n            position: \"center\",\n            marginTop: \"20px\",\n            marginLeft: \"20px\",\n            fontWeight: \"bold\",\n            borderRadius: \"20px\",\n            border: \"1px solid\",\n            width: \"600px\",\n            borderColor: \"#3a5eb9\",\n          }}\n        >\n          <Box>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              Los hechos adicionados, no generan ninguna coincidencia. Por favor\n              intente de nuevo.\n            </Typography>\n          </Box>\n        </div>\n      </div>\n      <Button\n        variant=\"contained\"\n        size=\"medium\"\n        color=\"primary\"\n        onClick={() => handleChange(\"deletefacts\")}\n        style={{\n          margin: \"20px\",\n          minWidth: \"200px\",\n          textTransform: \"none\",\n          borderRadius: \"10px\",\n          border: \"1px solid\",\n        }}\n      >\n        Eliminar hechos\n      </Button>\n    </div>\n  );\n};\n\nexport default FactsAd;\n","import React from \"react\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\n\nconst FactsAd = () => {\n  return (\n    <div style={{ alignItems: \"center\" }}>\n      <CircularProgress />\n    </div>\n  );\n};\n\nexport default FactsAd;\n","import React from \"react\";\nimport \"./Info.css\";\nimport ReactMarkdown from \"react-markdown\";\n\nconst Info = () => {\n  const comment = JSON.parse(localStorage.getItem(\"comment\"));\n\n  return (\n    <div\n      style={{\n        fontSize: \"0.85rem\",\n        padding: \"5px 25px\",\n        textAlign: \"left\",\n        color: \"#39393a\",\n        wordBreak: \"break-word\",\n        position: \"initial\",\n        marginTop: \"20px\",\n        marginLeft: \"60px\",\n        fontWeight: \"normal\",\n        borderRadius: \"20px\",\n        border: \"1px solid\",\n        width: \"600px\",\n        borderColor: \"#dfe8f2\",\n        backgroundColor: \"#dfe8f2\",\n      }}\n    >\n      <ReactMarkdown>{comment}</ReactMarkdown>\n    </div>\n  );\n};\n\nexport default Info;\n","import React, { useState } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport FillInformation from \"../FillInformation/FillInformation\";\n\nimport \"./Provisional.css\";\n\nconst Provisional = (props) => {\n  localStorage.removeItem(\"provisionaladded\");\n  const actualmessage = JSON.parse(localStorage.getItem(\"actualmessage\"));\n  const example = actualmessage.example;\n  const [showButtons, setShowButtons] = useState(true);\n\n  // eslint-disable-next-line array-callback-return\n  const pos = example.findIndex((object, key) => {\n    if (object.type === \"buttons2\") {\n      return object.content;\n    }\n    if (key === example.length - 1) {\n      return -1;\n    }\n  });\n  const buttons = pos !== -1 ? example[pos].content : [];\n\n  const [provisional, setProvisional] = useState({\n    text: \"\",\n    id: 0,\n    disabled: false,\n  });\n  const [empty, setEmpty] = useState(false);\n\n  const handleUpdateDescription = (event, key) => {\n    provisional.text = event.target.value;\n    setProvisional((prevState) => ({\n      provisional: provisional,\n    }));\n  };\n\n  const isEmpty = (provisional) => {\n    var wasNull = false;\n    if (provisional.text === \"\") wasNull = true;\n    if (wasNull) return true;\n    else return false;\n  };\n\n  const handleClick = (selected) => {\n    console.log(selected);\n    if (selected.id === \"next\") {\n      console.log(\"next\");\n\n      const result = isEmpty(provisional);\n\n      if (!result) {\n        provisional.disabled = true;\n        setProvisional((prevState) => ({\n          provisional: provisional,\n        }));\n        console.log(\"provisionaladded\", provisional);\n        localStorage.setItem(\"provisionaladded\", JSON.stringify(provisional));\n        props.actionProvider.showMessage(selected, actualmessage);\n        setEmpty(false);\n        setShowButtons(false);\n      } else {\n        setEmpty(true);\n      }\n    } else if (selected.id === \"previous\") {\n      console.log(\"previous\");\n\n      props.actionProvider.showMessage(selected, actualmessage);\n      setShowButtons(false);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"facts-container\">\n        <div className=\"facts-message-content\">\n          <div\n            style={{\n              position: \"relative\",\n              margin: \"10px 10px\",\n              display: \"inline-block\",\n            }}\n          >\n            <div\n              style={{\n                backgroundColor: \"white\",\n                border: \"1px solid rgb(58, 94, 185)\",\n                borderRadius: \"50px\",\n                position: \"absolute\",\n                top: \"60%\",\n                left: \"3%\",\n                transform: \"translateX(-50%) translateY(-50%)\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                width: \"40px\",\n                height: \"40px\",\n              }}\n            >\n              <svg width=\"30px\" viewBox=\"0 0 512 512\">\n                <path\n                  fill=\"#3a5eb9\"\n                  d=\"M256 288c79.5 0 144-64.5 144-144S335.5 0 256 0 112 64.5 112 144s64.5 144 144 144zm128 32h-55.1c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16H128C57.3 320 0 377.3 0 448v16c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48v-16c0-70.7-57.3-128-128-128z\"\n                ></path>\n              </svg>\n            </div>\n\n            <TextField\n              disabled={!showButtons}\n              value={provisional.text}\n              onChange={(e) => handleUpdateDescription(e)}\n              sx={{ padding: 2 }}\n              multiline\n              rows={4}\n              style={{\n                fontSize: \"0.70rem\",\n                padding: \"5px 25px\",\n                textAlign: \"left\",\n                color: \"#39393a\",\n                wordBreak: \"break-word\",\n                position: \"initial\",\n                marginTop: \"20px\",\n                marginLeft: \"20px\",\n                fontWeight: \"bold\",\n                borderRadius: \"20px\",\n                border: \"1px solid\",\n                width: \"600px\",\n                borderColor: \"#3a5eb9\",\n              }}\n              placeholder=\"Escriba aqui...\"\n            />\n          </div>\n        </div>\n      </div>\n      <div style={{ alignItems: \"center\" }}>{empty && <FillInformation />}</div>\n      {showButtons && (\n        <div style={{ alignItems: \"center\" }}>\n          {buttons.length > 0 &&\n            buttons.map((option) => (\n              <Button\n                variant=\"contained\"\n                size=\"medium\"\n                color=\"primary\"\n                onClick={() => handleClick(option)}\n                style={{\n                  margin: \"20px\",\n                  minWidth: \"200px\",\n                  textTransform: \"none\",\n                  borderRadius: \"10px\",\n                  border: \"1px solid\",\n                }}\n              >\n                {option.text}\n              </Button>\n            ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Provisional;\n","import React, { useState } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport FillInformation from \"../FillInformation/FillInformation\";\n\nimport \"./Evidences.css\";\n\nconst Evidences = (props) => {\n  const [descriptionArray, setDescriptionArray] = useState([\n    {\n      year: \"\",\n      month: \"\",\n      description: \"\",\n      id: 0,\n      disabled: false,\n    },\n  ]);\n  const [showButtons, setShowButtons] = useState(true);\n\n  const [empty, setEmpty] = useState(false);\n  const actualmessage = JSON.parse(localStorage.getItem(\"actualmessage\"));\n  const example = actualmessage.example;\n  // eslint-disable-next-line array-callback-return\n  const pos = example.findIndex((object, key) => {\n    if (object.type === \"buttons2\") {\n      return object.content;\n    }\n    if (key === example.length - 1) {\n      return -1;\n    }\n  });\n  const buttons = pos !== -1 ? example[pos].content : [];\n\n  const handleUpdateDescription = (event, key) => {\n    descriptionArray[key].description = event.target.value;\n    setDescriptionArray((descriptionArray) => [...descriptionArray]);\n  };\n\n  const handleAdddescription = () => {\n    const newElement = {\n      year: \"\",\n      month: \"\",\n      description: \"\",\n      id: parseInt(descriptionArray.length),\n      disabled: false,\n    };\n    setDescriptionArray((descriptionArray) => [\n      ...descriptionArray,\n      newElement,\n    ]);\n  };\n\n  const handleRemovedescription = async (pos) => {\n    const array = descriptionArray.filter((item) => item.id !== pos);\n    await setDescriptionArray(array);\n  };\n\n  const isEmpty = (objectsArray) => {\n    var wasNull = false;\n    for (var i in objectsArray) {\n      if (objectsArray[i].description === \"\") wasNull = true;\n    }\n    if (wasNull) return true;\n    else return false;\n  };\n\n  const handleClick = (selected) => {\n    const result = isEmpty(descriptionArray);\n    if (selected.id === \"next\") {\n      if (!result) {\n        setEmpty(false);\n        props.actionProvider.showMessage(selected, actualmessage);\n        setShowButtons(false);\n      } else {\n        setEmpty(true);\n      }\n    } else if (selected.id === \"previous\") {\n      props.actionProvider.showMessage(selected, actualmessage);\n    }\n  };\n\n  return (\n    <div>\n      {descriptionArray.map((des, key) => {\n        return (\n          <div className=\"facts-container\">\n            <div className=\"facts-message-content\">\n              <div\n                style={{\n                  position: \"relative\",\n                  margin: \"10px 10px\",\n                  display: \"inline-block\",\n                }}\n              >\n                <div\n                  style={{\n                    backgroundColor: \"white\",\n                    border: \"1px solid rgb(58, 94, 185)\",\n                    borderRadius: \"50px\",\n                    position: \"absolute\",\n                    top: \"60%\",\n                    left: \"5%\",\n                    transform: \"translateX(-50%) translateY(-50%)\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    width: \"40px\",\n                    height: \"40px\",\n                  }}\n                >\n                  <svg width=\"30px\" viewBox=\"0 0 512 512\">\n                    <path\n                      fill=\"#3a5eb9\"\n                      d=\"M256 288c79.5 0 144-64.5 144-144S335.5 0 256 0 112 64.5 112 144s64.5 144 144 144zm128 32h-55.1c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16H128C57.3 320 0 377.3 0 448v16c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48v-16c0-70.7-57.3-128-128-128z\"\n                    ></path>\n                  </svg>\n                </div>\n\n                <TextField\n                  disabled={!showButtons}\n                  value={des.description}\n                  onChange={(e) => handleUpdateDescription(e, key)}\n                  sx={{ padding: 2 }}\n                  multiline\n                  rows={4}\n                  style={{\n                    fontSize: \"0.70rem\",\n                    padding: \"5px 25px\",\n                    textAlign: \"left\",\n                    color: \"#39393a\",\n                    wordBreak: \"break-word\",\n                    position: \"initial\",\n                    marginTop: \"20px\",\n                    marginLeft: \"20px\",\n                    fontWeight: \"bold\",\n                    borderRadius: \"20px\",\n                    border: \"1px solid\",\n                    width: \"400px\",\n                    borderColor: \"#3a5eb9\",\n                  }}\n                  placeholder=\"Escriba aquí el nombre de la prueba...\"\n                />\n              </div>\n            </div>\n            {showButtons && (\n              <div className=\"facts-message-content\">\n                {key === 0 && descriptionArray.length > 1 ? (\n                  <Button\n                    variant=\"contained\"\n                    size=\"small\"\n                    color=\"primary\"\n                    onClick={() => handleRemovedescription(key)}\n                    style={{\n                      margin: \"5px\",\n                      minWidth: \"150px\",\n                      textTransform: \"none\",\n                      borderRadius: \"10px\",\n                      border: \"1px solid\",\n                    }}\n                  >\n                    Eliminar esta prueba\n                  </Button>\n                ) : key === 0 && descriptionArray.length === 1 ? (\n                  <Button\n                    variant=\"contained\"\n                    size=\"small\"\n                    color=\"primary\"\n                    onClick={() => handleAdddescription()}\n                    style={{\n                      margin: \"5px\",\n                      minWidth: \"200px\",\n                      textTransform: \"none\",\n                      borderRadius: \"10px\",\n                      border: \"1px solid\",\n                    }}\n                  >\n                    Agregar más pruebas\n                  </Button>\n                ) : key > 0 && descriptionArray.length > 0 ? (\n                  <div style={{ width: \"min-content\" }}>\n                    <Button\n                      variant=\"contained\"\n                      size=\"small\"\n                      color=\"primary\"\n                      onClick={() => handleRemovedescription(key)}\n                      style={{\n                        margin: \"5px\",\n                        minWidth: \"150px\",\n                        textTransform: \"none\",\n                        borderRadius: \"10px\",\n                        border: \"1px solid\",\n                      }}\n                    >\n                      Eliminar esta prueba\n                    </Button>\n                    <Button\n                      variant=\"contained\"\n                      size=\"small\"\n                      color=\"primary\"\n                      onClick={() => handleAdddescription()}\n                      style={{\n                        margin: \"5px\",\n                        minWidth: \"150px\",\n                        textTransform: \"none\",\n                        borderRadius: \"10px\",\n                        border: \"1px solid\",\n                      }}\n                    >\n                      Agregar más prueba\n                    </Button>\n                  </div>\n                ) : null}\n              </div>\n            )}\n          </div>\n        );\n      })}\n\n      <div style={{ alignItems: \"center\" }}>{empty && <FillInformation />}</div>\n\n      {showButtons && (\n        <div style={{ alignItems: \"center\" }}>\n          {buttons.length > 0 &&\n            buttons.map((option) => (\n              <Button\n                variant=\"contained\"\n                size=\"medium\"\n                color=\"primary\"\n                onClick={() => handleClick(option)}\n                style={{\n                  margin: \"20px\",\n                  minWidth: \"200px\",\n                  textTransform: \"none\",\n                  borderRadius: \"10px\",\n                  border: \"1px solid\",\n                }}\n              >\n                {option.text}\n              </Button>\n            ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Evidences;\n","import React, { useEffect } from \"react\";\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\n\nconst Pretentions = ({ props }) => {\n  // Checkbox Group\n  const [elements, setElements] = React.useState({});\n\n  useEffect(() => {\n    const list = JSON.parse(localStorage.getItem(\"pretentionslist\"));\n    const newlist = list.map((object) => {\n      return { element: object, value: false };\n    });\n    setElements(newlist);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleChange = (value) => {\n    const pos = elements.map((object) => object.element).indexOf(value);\n    elements[pos].value = !elements[pos].value;\n    setElements((elements) => [...elements]);\n    // eslint-disable-next-line array-callback-return\n    let rightsselected = elements.map((item) => {\n      if (item.value) {\n        return item.element;\n      }\n    });\n    rightsselected = rightsselected.filter((item) => item !== undefined);\n    localStorage.setItem(\"pretentionsselected\", JSON.stringify(rightsselected));\n  };\n\n  return (\n    <div>\n      <div\n        style={{\n          position: \"relative\",\n          margin: \"10px 40px\",\n          display: \"flex\",\n          justifyContent: \"flex-start\",\n        }}\n      >\n        <div\n          style={{\n            backgroundColor: \"white\",\n            border: \"1px solid rgb(58, 94, 185)\",\n            borderRadius: \"50px\",\n            position: \"absolute\",\n            top: \"60%\",\n            left: \"2%\",\n            transform: \"translateX(-50%) translateY(-50%)\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            width: \"40px\",\n            height: \"40px\",\n          }}\n        >\n          <svg width=\"30px\" viewBox=\"0 0 512 512\">\n            <path\n              fill=\"#3a5eb9\"\n              d=\"M256 288c79.5 0 144-64.5 144-144S335.5 0 256 0 112 64.5 112 144s64.5 144 144 144zm128 32h-55.1c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16H128C57.3 320 0 377.3 0 448v16c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48v-16c0-70.7-57.3-128-128-128z\"\n            ></path>\n          </svg>\n        </div>\n        <div\n          id=\"chatbot-box\"\n          style={{\n            fontSize: \"0.70rem\",\n            padding: \"5px 25px\",\n            textAlign: \"left\",\n            color: \"#54565a\",\n            wordBreak: \"break-word\",\n            position: \"initial\",\n            marginTop: \"20px\",\n            marginLeft: \"20px\",\n            fontWeight: \"normal\",\n            borderRadius: \"20px\",\n            border: \"1px solid\",\n            width: \"600px\",\n            borderColor: \"#3a5eb9\",\n          }}\n        >\n          {elements.length > 0\n            ? elements.map((item) => {\n                return (\n                  <Box\n                    sx={{\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      bgcolor: \"background.paper\",\n                    }}\n                  >\n                    {!item.value && (\n                      <CheckBoxOutlineBlankIcon\n                        color=\"#1976d2\"\n                        size={30}\n                        onClick={() => handleChange(item.element)}\n                      />\n                    )}\n                    {item.value && (\n                      <CheckBoxIcon\n                        color={\"primary\"}\n                        size={30}\n                        onClick={() => handleChange(item.element)}\n                      />\n                    )}\n                    <Typography variant=\"bodyRegular\" gutterBottom>\n                      {item.element}\n                    </Typography>\n                  </Box>\n                );\n              })\n            : null}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Pretentions;\n","import React, { useState } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport \"./AddPretentions.css\";\n\nconst AddPretentions = (props) => {\n  const [pretentionArray, setDescriptionArray] = useState([\n    { pretention: \"\", id: 0 },\n  ]);\n\n  const handleUpdateDescription = (event, key) => {\n    pretentionArray[key].pretention = event.target.value;\n    setDescriptionArray((pretentionArray) => [...pretentionArray]);\n    let pretentionsadded = pretentionArray.map((item) => item.pretention);\n    localStorage.setItem(\"pretentionsadded\", JSON.stringify(pretentionsadded));\n  };\n\n  const handleAddpretention = () => {\n    const newElement = {\n      pretention: \"\",\n      id: parseInt(pretentionArray.length),\n    };\n    setDescriptionArray((pretentionArray) => [...pretentionArray, newElement]);\n    let pretentionsadded = pretentionArray.map((item) => item.pretention);\n    localStorage.setItem(\"pretentionsadded\", JSON.stringify(pretentionsadded));\n  };\n\n  const handleRemovepretention = async (pos) => {\n    const array = pretentionArray.filter((item) => item.id !== pos);\n    await setDescriptionArray(array);\n    let pretentionsadded = array.map((item) => item.pretention);\n    localStorage.setItem(\"pretentionsadded\", JSON.stringify(pretentionsadded));\n  };\n\n  return (\n    <div>\n      {pretentionArray.map((des, key) => {\n        return (\n          <div className=\"addpretentions-container\">\n            <div className=\"addpretentions-message-content\">\n              <div\n                style={{\n                  position: \"relative\",\n                  margin: \"10px 10px\",\n                  display: \"inline-block\",\n                }}\n              >\n                <div\n                  style={{\n                    backgroundColor: \"white\",\n                    border: \"1px solid rgb(58, 94, 185)\",\n                    borderRadius: \"50px\",\n                    position: \"absolute\",\n                    top: \"60%\",\n                    left: \"5%\",\n                    transform: \"translateX(-50%) translateY(-50%)\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    width: \"40px\",\n                    height: \"40px\",\n                  }}\n                >\n                  <svg width=\"30px\" viewBox=\"0 0 512 512\">\n                    <path\n                      fill=\"#3a5eb9\"\n                      d=\"M256 288c79.5 0 144-64.5 144-144S335.5 0 256 0 112 64.5 112 144s64.5 144 144 144zm128 32h-55.1c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16H128C57.3 320 0 377.3 0 448v16c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48v-16c0-70.7-57.3-128-128-128z\"\n                    ></path>\n                  </svg>\n                </div>\n                <div>\n                  <TextField\n                    value={des.pretention}\n                    onChange={(e) => handleUpdateDescription(e, key)}\n                    sx={{ padding: 2 }}\n                    multiline\n                    rows={2}\n                    placeholder=\"Escriba aquí su pretensión...\"\n                    style={{\n                      fontSize: \"0.70rem\",\n                      padding: \"5px 30px\",\n                      textAlign: \"left\",\n                      color: \"#39393a\",\n                      wordBreak: \"break-word\",\n                      position: \"initial\",\n                      marginTop: \"20px\",\n                      marginLeft: \"20px\",\n                      fontWeight: \"bold\",\n                      borderRadius: \"20px\",\n                      border: \"1px solid\",\n                      width: \"400px\",\n                      borderColor: \"#3a5eb9\",\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"addpretentions-message-content\">\n              {key === 0 && pretentionArray.length > 1 ? (\n                <Button\n                  variant=\"contained\"\n                  size=\"small\"\n                  color=\"primary\"\n                  onClick={() => handleRemovepretention(key)}\n                  style={{\n                    margin: \"5px\",\n                    minWidth: \"200px\",\n                    textTransform: \"none\",\n                    borderRadius: \"10px\",\n                    border: \"1px solid\",\n                  }}\n                >\n                  Eliminar esta pretensión\n                </Button>\n              ) : key === 0 && pretentionArray.length === 1 ? (\n                <Button\n                  variant=\"contained\"\n                  size=\"small\"\n                  color=\"primary\"\n                  onClick={() => handleAddpretention()}\n                  style={{\n                    margin: \"5px\",\n                    minWidth: \"200px\",\n                    textTransform: \"none\",\n                    borderRadius: \"10px\",\n                    border: \"1px solid\",\n                  }}\n                >\n                  Agregar más pretensiones\n                </Button>\n              ) : key > 0 && pretentionArray.length > 0 ? (\n                <div style={{ width: \"min-content\" }}>\n                  <Button\n                    variant=\"contained\"\n                    size=\"small\"\n                    color=\"primary\"\n                    onClick={() => handleRemovepretention(key)}\n                    style={{\n                      margin: \"5px\",\n                      minWidth: \"200px\",\n                      textTransform: \"none\",\n                      borderRadius: \"10px\",\n                      border: \"1px solid\",\n                    }}\n                  >\n                    Eliminar esta pretensión\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    size=\"small\"\n                    color=\"primary\"\n                    onClick={() => handleAddpretention()}\n                    style={{\n                      margin: \"5px\",\n                      minWidth: \"200px\",\n                      textTransform: \"none\",\n                      borderRadius: \"10px\",\n                      border: \"1px solid\",\n                    }}\n                  >\n                    Agregar más pretensiones\n                  </Button>\n                </div>\n              ) : null}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default AddPretentions;\n","import React, { useEffect } from \"react\";\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\n\nconst SelectSpecial = ({ props }) => {\n  // Checkbox Group\n  const [elements, setElements] = React.useState({});\n\n  useEffect(() => {\n    const list = JSON.parse(localStorage.getItem(\"especialist\"));\n    const newlist = list.map((object) => {\n      return { element: object, value: false };\n    });\n\n    setElements(newlist);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleChange = (value) => {\n    const pos = elements.map((object) => object.element).indexOf(value);\n    elements[pos].value = !elements[pos].value;\n    setElements((elements) => [...elements]);\n    // eslint-disable-next-line array-callback-return\n    let rightsselected = elements.map((item) => {\n      if (item.value) {\n        return item.element;\n      }\n    });\n    rightsselected = rightsselected.filter((item) => item !== undefined);\n\n    localStorage.setItem(\"rightsselected\", JSON.stringify(rightsselected));\n  };\n\n  return (\n    <div\n      style={{\n        position: \"relative\",\n        margin: \"10px 40px\",\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n      }}\n    >\n      <div\n        style={{\n          backgroundColor: \"white\",\n          border: \"1px solid rgb(58, 94, 185)\",\n          borderRadius: \"50px\",\n          position: \"absolute\",\n          top: \"60%\",\n          left: \"2%\",\n          transform: \"translateX(-50%) translateY(-50%)\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          width: \"40px\",\n          height: \"40px\",\n        }}\n      >\n        <svg width=\"30px\" viewBox=\"0 0 512 512\">\n          <path\n            fill=\"#3a5eb9\"\n            d=\"M256 288c79.5 0 144-64.5 144-144S335.5 0 256 0 112 64.5 112 144s64.5 144 144 144zm128 32h-55.1c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16H128C57.3 320 0 377.3 0 448v16c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48v-16c0-70.7-57.3-128-128-128z\"\n          ></path>\n        </svg>\n      </div>\n      <div\n        id=\"chatbot-box\"\n        style={{\n          fontSize: \"0.70rem\",\n          padding: \"5px 25px\",\n          textAlign: \"left\",\n          color: \"#54565a\",\n          wordBreak: \"break-word\",\n          position: \"initial\",\n          marginTop: \"20px\",\n          marginLeft: \"20px\",\n          fontWeight: \"normal\",\n          borderRadius: \"20px\",\n          border: \"1px solid\",\n          width: \"600px\",\n          borderColor: \"#3a5eb9\",\n        }}\n      >\n        {elements.length > 0\n          ? elements.map((item) => {\n              return (\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    bgcolor: \"background.paper\",\n                  }}\n                >\n                  {!item.value && (\n                    <CheckBoxOutlineBlankIcon\n                      color=\"#1976d2\"\n                      size={30}\n                      onClick={() => handleChange(item.element)}\n                    />\n                  )}\n                  {item.value && (\n                    <CheckBoxIcon\n                      color={\"primary\"}\n                      size={30}\n                      onClick={() => handleChange(item.element)}\n                    />\n                  )}\n                  <Typography variant=\"bodyRegular\" gutterBottom>\n                    {item.element}\n                  </Typography>\n                </Box>\n              );\n            })\n          : null}\n      </div>\n    </div>\n  );\n};\n\nexport default SelectSpecial;\n","import React from \"react\";\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\n\nconst PretentionsSelected = (props) => {\n  props.actionProvider.showMessage(\"addpretentions\");\n\n  let pretentionsselected = JSON.parse(\n    localStorage.getItem(\"pretentionsselected\")\n  );\n  const pretentionsadded = JSON.parse(localStorage.getItem(\"pretentionsadded\"));\n  if (pretentionsadded) {\n    pretentionsselected = [...pretentionsselected, pretentionsadded];\n  }\n\n  return (\n    <div\n      style={{\n        position: \"relative\",\n        margin: \"10px 40px\",\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n      }}\n    >\n      <div\n        style={{\n          backgroundColor: \"white\",\n          border: \"1px solid rgb(58, 94, 185)\",\n          borderRadius: \"50px\",\n          position: \"absolute\",\n          top: \"60%\",\n          left: \"2%\",\n          transform: \"translateX(-50%) translateY(-50%)\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          width: \"40px\",\n          height: \"40px\",\n        }}\n      >\n        <svg width=\"30px\" viewBox=\"0 0 512 512\">\n          <path\n            fill=\"#3a5eb9\"\n            d=\"M256 288c79.5 0 144-64.5 144-144S335.5 0 256 0 112 64.5 112 144s64.5 144 144 144zm128 32h-55.1c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16H128C57.3 320 0 377.3 0 448v16c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48v-16c0-70.7-57.3-128-128-128z\"\n          ></path>\n        </svg>\n      </div>\n      <div\n        id=\"chatbot-box\"\n        style={{\n          fontSize: \"0.70rem\",\n          padding: \"5px 25px\",\n          textAlign: \"left\",\n          color: \"#54565a\",\n          wordBreak: \"break-word\",\n          position: \"initial\",\n          marginTop: \"20px\",\n          marginLeft: \"20px\",\n          fontWeight: \"normal\",\n          borderRadius: \"20px\",\n          border: \"1px solid\",\n          width: \"600px\",\n          borderColor: \"#3a5eb9\",\n        }}\n      >\n        {pretentionsselected.length &&\n          pretentionsselected.map((item) => {\n            return (\n              item && (\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    bgcolor: \"background.paper\",\n                  }}\n                >\n                  <CheckBoxIcon color={\"primary\"} size={30} />\n                  <Typography variant=\"bodyRegular\" gutterBottom>\n                    {item}\n                  </Typography>\n                </Box>\n              )\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default PretentionsSelected;\n","import React, { useEffect } from \"react\";\n\nconst Initial = (props) => {\n  const id = \"transition2.json\";\n\n  useEffect(() => {\n    props.actionProvider.initialFuntion();\n\n    //   promise = import(`../../configuration/${id}`)\n    //     .then((data) => {\n\n    //       const page = data.pages[0];\n    //       localStorage.setItem('actualmessage', JSON.stringify(page));\n    //       const initial = [].concat(...page.example.map((message, key) => {\n    //         if (message.type === \"bubble\") {\n    //           return createChatBotMessage(\n    //             message.content, { delay: 1 * (key * 1000), withAvatar: true, props: { type: message.type, page: 0 } }\n    //           )\n    //         } if (message.type === \"buttons\") {\n    //           // return createChatBotMessage('',\n    //           //   {\n    //           //     widget: \"buttons\",\n    //           //     delay: 1 * (key * 1000),\n    //           //     withAvatar: false, props: { type: message.type, page: 0 }\n    //           //   }\n    //           // )\n    //         }\n    //         return createChatBotMessage('', { withAvatar: false })\n    //       }\n    //       ));\n    //       return initial;\n    //     });\n    //   config.initialMessages = await promise;\n\n    import(`../../../configuration/${id}`).then((data) => {\n      const page = data.pages[0];\n\n      localStorage.setItem(\"actualmessage\", JSON.stringify(page));\n      page.example.forEach((message, key) => {\n        if (message.type === \"bubble\") {\n          const msg = props.actionProvider.addBubble(message.content, key, 0);\n          props.actionProvider.addMessageToState(msg);\n        }\n        if (message.type === \"buttons\") {\n          const msg = props.actionProvider.addComponent(key, \"buttons\", 0);\n          props.actionProvider.addMessageToState(msg);\n        }\n      });\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return <></>;\n};\n\nexport default Initial;\n","import React from \"react\";\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\n\nconst ListPretentionsSelected = () => {\n  // Checkbox Group\n  let pretentionsselected = JSON.parse(\n    localStorage.getItem(\"pretentionsselected\")\n  );\n  return (\n    <div\n      style={{\n        position: \"relative\",\n        margin: \"10px 40px\",\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n      }}\n    >\n      <div\n        style={{\n          backgroundColor: \"white\",\n          border: \"1px solid rgb(58, 94, 185)\",\n          borderRadius: \"50px\",\n          position: \"absolute\",\n          top: \"60%\",\n          left: \"2%\",\n          transform: \"translateX(-50%) translateY(-50%)\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          width: \"40px\",\n          height: \"40px\",\n        }}\n      >\n        <svg width=\"30px\" viewBox=\"0 0 512 512\">\n          <path\n            fill=\"#3a5eb9\"\n            d=\"M256 288c79.5 0 144-64.5 144-144S335.5 0 256 0 112 64.5 112 144s64.5 144 144 144zm128 32h-55.1c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16H128C57.3 320 0 377.3 0 448v16c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48v-16c0-70.7-57.3-128-128-128z\"\n          ></path>\n        </svg>\n      </div>\n      <div\n        id=\"chatbot-box\"\n        style={{\n          fontSize: \"0.70rem\",\n          padding: \"5px 25px\",\n          textAlign: \"left\",\n          color: \"#54565a\",\n          wordBreak: \"break-word\",\n          position: \"initial\",\n          marginTop: \"20px\",\n          marginLeft: \"20px\",\n          fontWeight: \"normal\",\n          borderRadius: \"20px\",\n          border: \"1px solid\",\n          width: \"600px\",\n          borderColor: \"#3a5eb9\",\n        }}\n      >\n        {pretentionsselected.length &&\n          pretentionsselected.map((item) => {\n            return (\n              item && (\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    bgcolor: \"background.paper\",\n                  }}\n                >\n                  <CheckBoxIcon color={\"primary\"} size={30} />\n                  <Typography variant=\"bodyRegular\" gutterBottom>\n                    {item}\n                  </Typography>\n                </Box>\n              )\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default ListPretentionsSelected;\n","import React from \"react\";\nimport { createChatBotMessage } from \"react-chatbot-kit\";\nimport Avatar from \"../components/Avatar/Avatar\";\nimport Header from \"../layout/Header/Header\";\nimport BotChatMessage from \"../features/Message/MessageBot\";\nimport Options from \"../components/Options/Options\";\nimport Facts from \"../components/Facts/Facts\";\nimport CheckboxGroup from \"../components/CheckboxGroup/CheckboxGroup\";\nimport CheckboxSelected from \"../components/CheckboxSelected/CheckboxSelected\";\nimport FactsAdded from \"../components/FactsAdded/FactsAdded\";\nimport FactsFailed from \"../components/FactsFailed/FactsFailed\";\nimport Loading from \"../components/Loading/Loading\";\nimport Info from \"../components/Info/Info\";\nimport Provisional from \"../components/Provisional/Provisional\";\nimport Evidences from \"../components/Evidences/Evidences\";\nimport Pretentions from \"../components/Pretentions/Pretentions\";\nimport FillInformation from \"../components/FillInformation/FillInformation\";\nimport AddPretentions from \"../components/AddPretentions/AddPretentions\";\nimport SelectSpecial from \"../components/SelectSpecial/SelectSpecial\";\nimport PretentionsSelected from \"../components/PretentionsSelected/PretentionsSelected\";\nimport Initial from \"../components/Initial/Initial\";\nimport ListPretentionsSelected from \"../components/ListPretentionsSelected/ListPretentionsSelected\";\n\n\n\nlet config = {\n  initialMessages: [\n    createChatBotMessage('', {\n      withAvatar: false,\n    }\n    ), createChatBotMessage(\n      \"\",\n      {\n        widget: \"initial\",\n        withAvatar: false\n      }\n    )],\n  widgets: [\n    {\n      widgetName: \"initial\",\n      widgetFunc: (props) => <Initial {...props} />,\n    },\n    {\n      widgetName: \"buttons\",\n      widgetFunc: (props) => <Options {...props} />,\n    },\n    {\n      widgetName: \"selection-rights\",\n      widgetFunc: (props) => <CheckboxGroup {...props} />,\n    },\n    {\n      widgetName: \"confirm-selectionfacts\",\n      widgetFunc: (props) => <CheckboxSelected {...props} />,\n    },\n    {\n      widgetName: \"facts\",\n      widgetFunc: (props) => <Facts  {...props} />,\n    },\n    {\n      widgetName: \"factssaved\",\n      widgetFunc: (props) => <FactsAdded  {...props} />,\n    },\n    {\n      widgetName: \"factsfailed\",\n      widgetFunc: (props) => <FactsFailed  {...props} />,\n    },\n    {\n      widgetName: \"loading\",\n      widgetFunc: (props) => <Loading  {...props} />,\n    },\n    {\n      widgetName: \"info\",\n      widgetFunc: (props) => <Info  {...props} />,\n    },\n    {\n      widgetName: \"provisional\",\n      widgetFunc: (props) => <Provisional  {...props} />,\n    },\n    {\n      widgetName: \"evidences\",\n      widgetFunc: (props) => <Evidences  {...props} />,\n    },\n    {\n      widgetName: \"select-pretentions\",\n      widgetFunc: (props) => <Pretentions  {...props} />,\n    },\n    {\n      widgetName: \"fill\",\n      widgetFunc: (props) => <FillInformation  {...props} />,\n    },\n    {\n      widgetName: \"addpretentions\",\n      widgetFunc: (props) => <AddPretentions  {...props} />,\n    }, {\n      widgetName: \"selection-especial\",\n      widgetFunc: (props) => <SelectSpecial  {...props} />,\n    },\n    {\n      widgetName: \"confirm-selection-pretentions\",\n      widgetFunc: (props) => <PretentionsSelected  {...props} />,\n    },\n    {\n      widgetName: \"list-selection-pretentions\",\n      widgetFunc: (props) => <ListPretentionsSelected  {...props} />,\n    }\n  ],\n\n\n  customComponents: {\n    botAvatar: (props) => <Avatar {...props} />,\n    header: (props) => <Header {...props} />,\n    botChatMessage: (props) => <BotChatMessage {...props} />\n  }\n};\n\nexport default config;\n","const id = \"transition2.json\";\n\nclass ActionProvider {\n  constructor(createChatBotMessage, setStateFunc, createClientMessage) {\n    this.createChatBotMessage = createChatBotMessage;\n    this.setState = setStateFunc;\n    this.createClientMessage = createClientMessage;\n  }\n\n  initialFuntion = async () => {\n    console.log(\"initialFuntion\");\n    // localStorage.removeItem('actualmessage');\n    localStorage.removeItem('rightsselected');\n    localStorage.removeItem('comment');\n    localStorage.removeItem('pretentionsselected');\n    localStorage.removeItem('factssaved');\n    localStorage.removeItem('derechos');\n    localStorage.removeItem('especialist');\n    localStorage.removeItem('pretentionsadded');\n    localStorage.removeItem('pretentionslist');\n\n  }\n\n  traerDerechos = async () => {\n    this.loading();\n    const factssaved = JSON.parse(localStorage.getItem(\"factssaved\"));\n    const actualmessage = JSON.parse(localStorage.getItem(\"actualmessage\"));\n    const url = 'https://languagetutelas1.cognitiveservices.azure.com/language/:query-knowledgebases?projectName=prediccionderecho&api-version=2021-10-01&deploymentName=production'\n    let promises = [];\n    try {\n      let result;\n\n      factssaved.forEach(async (item) => {\n        promises.push(\n          new Promise(async (resolve, reject) => {\n            let data = {\n              top: 3,\n              question: item.description\n            }\n            const response = await fetch(url, {\n              method: \"POST\",\n              headers: {\n                \"Content-type\": \"application/json;charset=UTF-8\",\n                \"Ocp-Apim-Subscription-Key\": \"a6d6d0ce7d104937990e042a289ca17b\"\n              },\n              body: JSON.stringify(data)\n            })\n            result = await response.json()\n            const derechosres = result.answers.map(x => x.answer);\n            resolve(derechosres);\n          })\n        );\n      });\n\n      Promise.all(promises).then(values => {\n        const answers = values.flat()\n        let valuesfil = answers.filter((x) => x !== \"Ninguna\");\n        valuesfil = valuesfil.map(item => item.toLowerCase())\n        valuesfil = valuesfil.map(item => item.charAt(0).toUpperCase() + item.slice(1))\n\n        if (valuesfil.length > 0) {\n          localStorage.setItem('derechos', JSON.stringify(valuesfil));\n          this.traerPretensiones(valuesfil);\n          const delay = 5\n          this.nextPage(actualmessage.id, delay);\n          // this.traerPretensiones(valuesfil)\n        } else {\n          localStorage.setItem('derechos', JSON.stringify([]));\n          this.removeComponent(\"loading\")\n\n          let factsfailed = this.createChatBotMessage('',\n            {\n              widget: \"factsfailed\",\n              props: { page: parseInt(actualmessage.id) - 1 }\n            }\n          );\n          this.addMessageToState(factsfailed);\n          this.addMessageToState(this.createChatBotMessage('', {\n            withAvatar: false,\n            props: { page: parseInt(actualmessage.id) - 1 }\n          }\n          ));\n        }\n\n      }).catch(reason => {\n        console.log(reason)\n      });\n\n    } catch (error) {\n\n    }\n\n  }\n  traerPretensiones = (derechos) => {\n\n    let mapeo = {\n      'Acceso a la administración de justicia': [\n        'Garantía al derecho fundamental'\n      ],\n      'Ayuda humanitaria': [\n        'Entrega y/o prórroga de ayuda humanitaria',\n        'Comunicación de la fecha cierta sobre el pago de la ayuda humanitaria',\n        'Caracterización de núcleo familiar',\n        'Entrega y/o prórroga de ayuda humanitaria, pese a no contar con la cédula de ciudadanía con holograma',\n        'Inaplicar turno preestablecido para asignar ayuda humanitaria'\n      ],\n      'Debido proceso': [\n        'Ejercicio de la defensa',\n        'Protección del debido proceso administrativo',\n        'Nulidad de sanción administrativa por fotocomparendo',\n        'Revocatoria de providencia judicial por defecto fáctico',\n        'Revocatoria de providencia judicial por defecto procedimental absoluto',\n        'Revocatoria de providencia judicial por defecto sustantivo',\n        'Valoración integral de requisitos para concurso',\n        'Revocatoria de providencia judicial por desconocimiento del precedente',\n        'Revocatoria de providencia judicial por defecto orgánico',\n        'Revocatoria de providencia judicial por violación directa de la constitución',\n        'Revocatoria de providencia judicial por decisión sin motivación',\n        'Revocatoria de providencia judicial por error inducido'\n      ],\n      'Derecho a la reparación a población víctima de desplazamiento': [\n        'Reparación integral'\n      ],\n      'Derecho de petición': [\n        'Solicitud de información, copias, procedimientos',\n        'Solicitud sobre reparación administrativa',\n        'Solicitud de reconocimiento de pensiones',\n        'Cumplimiento de sentencia judicial',\n        'Solicitud resolución de recursos de la vía gubernativa',\n        'Expedición y entrega libreta militar'\n      ],\n      'Educación': [\n        'Accesibilidad',\n        'Disponibilidad',\n        'Expedición de certificados académicos',\n        'Violación debido proceso administrativo en calificaciones',\n        'No discriminación',\n        'Nombramiento de docentes',\n        'Prestación del servicio pese al incumplimiento de deberes contractuales',\n        'Inclusión de persona en condición de discapacidad',\n        'Transporte escolar',\n        'Educación pública gratuita para las víctimas del conflicto armado',\n        'Educación especial para personas con talentos excepcionales',\n        'Prestación del servicio con etnoeducadores'\n      ],\n      'Estabilidad laboral reforzada': [\n        'Reintegro y pago de salarios adeudados y/o prestaciones laborales',\n        'Pago de indemnización por despido injustificado'\n      ],\n      'Habeas data': [\n        'Corrección, aclaración, rectificación, o actualización de información por no atender los principios de exactitud, veracidad e integridad',\n        'Eliminación de dato negativo por reporte de obligación inexistente',\n        'Eliminación del dato negativo por no tener autorización para divulgarlo',\n        'Eliminación del dato negativo por prescripción',\n        'Exclusión del dato para que terceros no autorizados conozcan antecedentes penales'\n      ],\n      'Mínimo vital': [\n        'Pago de incapacidades',\n        'Garantía de las condiciones básicas de subsistencia',\n        'Pago de salarios y/o acreencias laborales',\n        'Acuerdos de pago',\n        'Pago de licencia de maternidad',\n        'Reconocimientos y pagos de subsidios',\n        'Pago de póliza de seguros',\n        'Pago de licencia de paternidad',\n        'Pago de salarios y/o acreencias laborales'\n      ],\n      'Salud': [\n        'Práctica oportuna del procedimiento médico',\n        'Entrega oportuna de medicamentos e insumos',\n        'Tratamiento integral',\n        'Asignación de citas médicas',\n        'Transporte y viáticos para recibir atención en salud',\n        'Valoración y/o diagnóstico médico',\n        'Continuidad en la prestación del servicio de salud',\n        'Afiliaciones y retiros',\n        'Medicamentos, insumos o servicios excluidos expresamente del PBS / POS',\n        'Atención domiciliaria',\n        'Exoneración de copagos o cuotas moderadoras',\n        'Cambio de EPS o IPS',\n        'Atención en salud para persona privada de la libertad',\n        'Valoración y/o diagnóstico médico',\n        'Reembolso por pagos médicos',\n        'Cubrimiento gastos médicos por EPS y/o EPSS',\n        'Tratamiento para la obesidad'\n      ],\n      'Seguridad social': [\n        'Calificación de pérdida de capacidad laboral',\n        'Pensión de vejez',\n        'Pensión de sobreviviente',\n        'Pago de aportes',\n        'Pensión de invalidez',\n        'Aplicación del principio de favorabilidad en materia pensional',\n        'Copia, corrección, y/o entrega de la historia laboral',\n        'Expedición de bono pensional',\n        'Traslado de régimen pensional',\n        'Reliquidación pensional',\n        'Indemnización sustitutiva',\n        'Pago retroactivo pensional e intereses',\n        'Inclusión en nómina y pago de la mesada',\n        'Pensión de regímenes especiales',\n        'Aplicación del régimen de transición',\n        'Incremento del 14% por cónyuge o compañero permanente a cargo',\n        'Copia, corrección, y/o entrega de la historia laboral',\n        'Indexación de la primera mesada pensional'\n      ],\n      'Trabajo': [\n        'Garantía a la estabilidad laboral',\n        'Disponibilidad de medios para cumplir labor',\n        'Terminación de trabajo sin justa causa y sin cancelación de prestaciones sociales',\n        'Contratación por haber ganado concurso de méritos',\n        'Traslado por razones de salud',\n        'Reubicación de vendedor ambulante por confianza legítima',\n        'Protección frente al acoso laboral'\n      ]\n    };\n\n    let respuesta = [];\n\n    for (let i = 0; i < derechos.length; i++) {\n      if (derechos[i] in mapeo) {\n        respuesta = respuesta.concat(mapeo[derechos[i]])\n      }\n    }\n\n    respuesta = [...new Set(respuesta)];\n    localStorage.setItem('pretentionslist', JSON.stringify(respuesta));\n\n  }\n\n\n\n  nextPage = async (pos) => {\n    import(`../../../configuration/${id}`)\n      .then((data) => {\n        const page = data.pages[pos];\n        let messageBot;\n        let messageButtons;\n        let messageComment;\n        this.removeComponent(\"buttons\")\n        this.removeComponent(\"info\")\n        localStorage.setItem('actualmessage', JSON.stringify(page));\n        let promises = [];\n\n        page.example.forEach(async (message, key) => {\n          if (message.type === \"bubble\") {\n            promises.push(\n              new Promise((resolve, reject) => {\n                messageBot = this.createChatBotMessage(\n                  message.content, {\n                  delay: 5 * (key * 1000), withAvatar: true, props: { type: message.type, page: pos }\n                }\n                );\n                resolve(messageBot);\n              })\n            );\n          } else if (message.type === \"comment\") {\n            localStorage.setItem('comment', JSON.stringify(message.content));\n\n            promises.push(\n              new Promise((resolve, reject) => {\n                //resolve(1);\n                messageComment = this.addComponent(key, \"info\", pos);\n                resolve(messageComment);\n              })\n            );\n            promises.push(\n              new Promise((resolve, reject) => {\n                resolve(this.addBlank(key, \"blank\", pos));\n              })\n            );\n          } else if (message.type === \"facts\") {\n            promises.push(\n              new Promise((resolve, reject) => {\n                //resolve(1);\n                messageComment = this.addComponent(key, message.type, pos);\n                resolve(messageComment);\n              })\n            );\n            promises.push(\n              new Promise((resolve, reject) => {\n                resolve(this.addBlank(key, \"blank\", pos));\n              })\n            );\n\n          }\n          else if (message.type === \"selection-rights\") {\n            promises.push(\n              new Promise(async (resolve, reject) => {\n                let messageSelected = this.addComponent(key, message.type, pos);\n                resolve(messageSelected);\n              })\n            );\n            promises.push(\n              new Promise((resolve, reject) => {\n                resolve(this.addBlank(key, \"blank\", pos));\n\n              })\n            );\n          }\n          else if (message.type === \"buttons\") {\n            if (page.example[key - 1].type !== \"facts\") {\n              promises.push(\n                new Promise((resolve, reject) => {\n                  messageButtons = this.addComponent(key, message.type, pos);\n                  resolve(messageButtons);\n                })\n              );\n            }\n          } else if (message.type === \"confirm-selectionfacts\") {\n            promises.push(\n              new Promise((resolve, reject) => {\n                messageButtons = this.addComponent(key, message.type, pos);\n                resolve(messageButtons);\n              })\n\n            );\n            promises.push(\n              new Promise((resolve, reject) => {\n                resolve(this.addBlank(key, \"blank\", pos));\n              })\n            );\n            this.removeComponent(\"selection-rights\");\n\n          } else if (message.type === \"provisional\") {\n            promises.push(\n              new Promise((resolve, reject) => {\n                messageButtons = this.addComponent(key, message.type, pos);\n                resolve(messageButtons);\n              })\n            );\n            promises.push(\n              new Promise((resolve, reject) => {\n                resolve(this.addBlank(key, \"blank\", pos));\n              })\n            );\n          }\n          else if (message.type === \"evidences\") {\n            promises.push(\n              new Promise((resolve, reject) => {\n                messageButtons = this.addComponent(key, message.type, pos);\n                resolve(messageButtons);\n              })\n            );\n            promises.push(\n              new Promise((resolve, reject) => {\n                resolve(this.addBlank(key, \"blank\", pos));\n              })\n            );\n          }\n          else if (message.type === \"select-pretentions\") {\n            promises.push(\n              new Promise((resolve, reject) => {\n                messageButtons = this.addComponent(key, message.type, pos);\n                resolve(messageButtons);\n              })\n            );\n            promises.push(\n              new Promise((resolve, reject) => {\n                resolve(this.addBlank(key, \"blank\", pos));\n              })\n            );\n          }\n          else if (message.type === \"addpretentions\") {\n            promises.push(\n              new Promise((resolve, reject) => {\n                messageButtons = this.addComponent(key, message.type, pos);\n                resolve(messageButtons);\n              })\n            );\n            promises.push(\n              new Promise((resolve, reject) => {\n                resolve(this.addBlank(key, \"blank\", pos));\n              })\n            );\n          } else if (message.type === \"selection-especial\") {\n            localStorage.setItem('especialist', JSON.stringify(message.list));\n\n            promises.push(\n              new Promise((resolve, reject) => {\n                messageButtons = this.addComponent(key, message.type, pos);\n                resolve(messageButtons);\n              })\n            );\n            promises.push(\n              new Promise((resolve, reject) => {\n                resolve(this.addBlank(key, \"blank\", pos));\n              })\n            );\n          }\n          else if (message.type === \"confirm-selection-pretentions\") {\n            this.removeComponent(\"select-pretentions\")\n            this.removeComponent(\"addpretentions\")\n            this.setState((prevState) => {\n              return {\n                messages: prevState.messages.filter((message) => message.props && message.props.page !== (pos - 2)),\n              }\n            });\n            promises.push(\n              new Promise((resolve, reject) => {\n                messageButtons = this.addComponent(key, message.type, pos);\n                resolve(messageButtons);\n              })\n            );\n            promises.push(\n              new Promise((resolve, reject) => {\n                resolve(this.addBlank(key, \"blank\", pos));\n              })\n            );\n          }\n\n        });\n\n        Promise.all(promises).then(values => {\n          values.forEach(item => this.addMessageToState(item));\n          this.removeComponent(\"loading\");\n        }).catch(reason => {\n          console.log(reason)\n        });\n      });\n  }\n\n  loading = () => {\n    const actualmessage = JSON.parse(localStorage.getItem(\"actualmessage\"));\n\n    let loading = this.createChatBotMessage('',\n      {\n        widget: \"loading\",\n      }\n    );\n    this.addMessageToState(loading);\n    this.addMessageToState(this.createChatBotMessage('', {\n      withAvatar: false,\n      props: { page: parseInt(actualmessage.id) - 1 }\n\n    }\n    ));\n  }\n\n  handleActionButton = () => {\n    const urlpdf = 'https://cdn.rawgit.com/yohatu14/files/79da21ecf0e7ddabed60df840d9e4dd8aca3dc93/Anexo4%20ABCDE%20de%20la%20Accio%CC%81n%20de%20Tutela.pdf'\n    window.open(urlpdf, '_blank', 'noopener,noreferrer');\n  }\n\n  backPage = async (pos) => {\n    console.log(\"pos\", pos)\n    import(`../../../configuration/${id}`)\n      .then((data) => {\n        const page = pos - 1;\n        const page2 = pos - 2;\n        this.setState((prevState) => {\n          console.log(prevState.messages)\n          return {\n            messages: prevState.messages.filter((message) => message.props && message.props.page !== (page)),\n          }\n        });\n        this.setState((prevState) => {\n          return {\n            messages: prevState.messages.filter((message) => message.props && message.props.page !== (page2)),\n          }\n        });\n\n        const delay = 0;\n        this.setState((prevState) => {\n          return {\n            messages: [...prevState.messages],\n          }\n        });\n        this.nextPage(page2, delay);\n      });\n\n  }\n\n  addMessageToState = (message) => {\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        messages: [...prevState.messages, message],\n      }\n    });\n  };\n\n  addBlank = (key, type, pos) => {\n    const result = this.createChatBotMessage('', {\n      delay: 5 * (key * 1000),\n      withAvatar: false,\n      props: { type: type, page: pos }\n    }\n    )\n    return result;\n  }\n\n\n  addBubble = (message, key, pos) => {\n    const result = this.createChatBotMessage(message, {\n      delay: 5 * (key * 1000), withAvatar: true, props: { type: \"bubble\", page: pos }\n    }\n    )\n    return result;\n  }\n\n\n  addComponent = (key, type, pos) => {\n    const result = this.createChatBotMessage('',\n      {\n        widget: type,\n        delay: 5 * (key * 1000),\n        withAvatar: false,\n        props: { type: type, page: pos }\n      }\n    );\n    return result;\n  }\n\n  removeComponent = (type) => {\n    this.setState((prevState) => ({\n      messages: prevState.messages.filter((message) => message.widget !== type),\n    }));\n  }\n\n  saveFacts = (factsList) => {\n    localStorage.setItem('factssaved', JSON.stringify(factsList));\n    const actualmessage = JSON.parse(localStorage.getItem(\"actualmessage\"));\n    this.removeComponent('facts')\n    let factsSaved = this.createChatBotMessage('',\n      {\n        delay: 1000,\n        widget: \"factssaved\",\n        props: { page: parseInt(actualmessage.id) - 1 }\n      }\n    );\n    this.addMessageToState(factsSaved);\n\n    this.addMessageToState(this.createChatBotMessage('', {\n      delay: 2000,\n      withAvatar: false,\n      props: { page: parseInt(actualmessage.id) - 1 }\n    }\n    ));\n  }\n\n  removeFacts = (actualmessage) => {\n    localStorage.removeItem('factssaved');\n    localStorage.removeItem('derechos');\n    this.removeComponent('factssaved')\n    let comment = this.createChatBotMessage('',\n      {\n        delay: 1000,\n        widget: \"info\",\n        props: { page: parseInt(actualmessage.id) - 1 }\n      }\n    );\n    this.addMessageToState(comment);\n    this.addMessageToState(this.createChatBotMessage('', {\n      delay: 2000,\n      withAvatar: false,\n      props: { page: parseInt(actualmessage.id) - 1 }\n\n    }\n    ));\n    let facts = this.createChatBotMessage('',\n      {\n        delay: 1000,\n        widget: \"facts\",\n        props: { page: parseInt(actualmessage.id) - 1 }\n      }\n    );\n    this.addMessageToState(facts);\n\n    this.addMessageToState(this.createChatBotMessage('', {\n      delay: 2000,\n      withAvatar: false,\n      props: { page: parseInt(actualmessage.id) - 1 }\n\n    }\n    ));\n    this.removeComponent('factsfailed')\n  }\n\n\n  addProvisional = (actualmessage) => {\n    this.nextPage(actualmessage.id)\n    this.removeComponent('buttons')\n    this.removeComponent('info')\n\n    let factsSaved = this.createChatBotMessage('',\n      {\n        delay: 1000,\n        widget: \"provisional\",\n        props: { page: parseInt(actualmessage.id) - 1 }\n      }\n    );\n    this.addMessageToState(factsSaved);\n\n    this.addMessageToState(this.createChatBotMessage('', {\n      delay: 2000,\n      withAvatar: false,\n      props: { page: parseInt(actualmessage.id) - 1 }\n    }\n    ));\n  }\n\n  showMessage = async (selected, actualmessage) => {\n    if (selected.id === \"next\") {\n      this.removeComponent(\"fill\")\n      const example = actualmessage.example;\n      // eslint-disable-next-line array-callback-return\n      const posPretentions = example.findIndex(item => item.type === \"select-pretentions\");\n      const posFacts = example.findIndex(item => item.type === \"selection-rights\");\n      const posAddPretentions = example.findIndex(item => item.type === \"addpretentions\");\n\n      if (posPretentions !== -1) {\n        const list = JSON.parse(localStorage.getItem(\"pretentionsselected\"));\n        if (list && list.length > 0) {\n          this.removeComponent(\"select-pretentions\")\n\n          const list = this.addComponent(1, \"list-selection-pretentions\", actualmessage.id)\n          this.addMessageToState(list)\n\n          this.nextPage(actualmessage.id, 1)\n        } else {\n          this.removeComponent(\"buttons\")\n\n          let warning = this.createChatBotMessage('',\n            {\n              widget: \"fill\",\n              props: { page: parseInt(actualmessage.id) - 1 }\n            }\n          );\n          this.addMessageToState(warning);\n          const button = this.addComponent(1, \"buttons\", actualmessage.id)\n          this.addMessageToState(this.addBlank(1, \"blank\", actualmessage.id))\n          this.addMessageToState(button)\n        }\n      } else if (posFacts !== -1) {\n\n        const list = JSON.parse(localStorage.getItem(\"rightsselected\"));\n        if (list && list.length > 0) {\n          this.nextPage(actualmessage.id, 1)\n        } else {\n          this.removeComponent(\"buttons\")\n\n          let warning = this.createChatBotMessage('',\n            {\n              widget: \"fill\",\n              props: { page: parseInt(actualmessage.id) - 1 }\n            }\n          );\n          this.addMessageToState(warning);\n          const button = this.addComponent(1, \"buttons\", actualmessage.id)\n          this.addMessageToState(this.addBlank(1, \"blank\", actualmessage.id))\n          this.addMessageToState(button)\n        }\n\n      } else if (posAddPretentions !== -1) {\n\n        let list = JSON.parse(localStorage.getItem(\"pretentionsadded\"));\n        if (list) {\n          list = list.filter((item) => item !== \"\");\n          if (list.length > 0) {\n            this.nextPage(actualmessage.id, 1)\n          } else {\n            this.removeComponent(\"buttons\")\n\n            let warning = this.createChatBotMessage('',\n              {\n                widget: \"fill\",\n                props: { page: parseInt(actualmessage.id) - 1 }\n              }\n            );\n            this.addMessageToState(warning);\n            const button = this.addComponent(1, \"buttons\", actualmessage.id)\n            this.addMessageToState(this.addBlank(1, \"blank\", actualmessage.id))\n            this.addMessageToState(button)\n          }\n        } else {\n          this.removeComponent(\"buttons\")\n\n          let warning = this.createChatBotMessage('',\n            {\n              widget: \"fill\",\n              props: { page: parseInt(actualmessage.id) - 1 }\n            }\n          );\n          this.addMessageToState(warning);\n          const button = this.addComponent(1, \"buttons\", actualmessage.id)\n          this.addMessageToState(this.addBlank(1, \"blank\", actualmessage.id))\n          this.addMessageToState(button)\n        }\n      } else {\n        this.nextPage(actualmessage.id, 1)\n      }\n\n    } else if (selected.id === \"action\") {\n      this.handleActionButton()\n    } else if (selected.id === \"previous\") {\n      this.backPage(actualmessage.id)\n    } else if (selected === \"deletefacts\") {\n      this.removeFacts(actualmessage);\n    } else if (selected === \"nextfacts\") {\n      this.traerDerechos(actualmessage)\n    } else if (selected.id === \"yesprovisional\") {\n      await this.nextPage(actualmessage.id, 5);\n    } else if (selected.id === \"noprovisional\") {\n      this.nextPage(actualmessage.id + 1, 5)\n    } else if (selected.id === \"yespretentions\") {\n      await this.nextPage(actualmessage.id, 5);\n    } else if (selected.id === \"nopretentions\") {\n      this.nextPage(actualmessage.id + 1, 5)\n    } else if (selected.id === \"previous-addpretentions\") {\n      console.log(\"previous-addpretentions\")\n      localStorage.removeItem(\"pretentionsadded\");\n      localStorage.removeItem(\"pretentionsselected\");\n\n      console.log(actualmessage.id)\n      const pos = actualmessage.id;\n      const page = pos - 1;\n      const page2 = pos - 2;\n      const page3 = pos - 3;\n      const page4 = pos - 4;\n\n      this.setState((prevState) => {\n        console.log(prevState.messages)\n        return {\n          messages: prevState.messages.filter((message) => message.props && message.props.page !== (page)),\n        }\n      });\n      this.setState((prevState) => {\n        return {\n          messages: prevState.messages.filter((message) => message.props && message.props.page !== (page2)),\n        }\n      });\n      this.setState((prevState) => {\n        return {\n          messages: prevState.messages.filter((message) => message.props && message.props.page !== (page3)),\n        }\n      });\n      this.setState((prevState) => {\n        return {\n          messages: prevState.messages.filter((message) => message.props && message.props.page !== (page4)),\n        }\n      });\n      this.nextPage(page4, 5)\n    }\n\n  }\n\n}\n\nexport default ActionProvider;\n","class MessageParser {\n  constructor(actionProvider,state) {\n    this.actionProvider = actionProvider;\n    this.state = state;\n  }\n  parse(message) {\n    this.actionProvider.greet(message);\n  }\n}\n\nexport default MessageParser;\n","import React, { useState } from 'react';\nimport Chatbot from \"react-chatbot-kit\";\nimport config from \"../../configuration/config\";\nimport ActionProvider from \"../../features/Actions/ActionProvider\";\nimport MessageParser from \"../../features/Actions/MessageParser\";\nimport \"./Chatbot.css\";\n\nfunction App() {\n  const [count, setCount] = useState(false);\n\n  return (\n    <div className=\"App\">\n\n      <div style={{ position: \"fixed\", maxWidth: \"100%\", right: \"25px\", bottom: \"80px\" }}>\n        {count === true && <Chatbot\n          config={config}\n          placeholderText=\"Haz una pregunta\"\n          actionProvider={ActionProvider}\n          messageParser={MessageParser}\n        />}\n\n        <button\n          className=\"app-chatbot-button\"\n          onClick={() => { if (count === true) { } setCount(!count) }}\n        >\n          {count === false ?\n            <>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" className=\"app-chatbot-button-icon\"><path d=\"M256 288c79.5 0 144-64.5 144-144S335.5 0 256 0 112 64.5 112 144s64.5 144 144 144zm128 32h-55.1c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16H128C57.3 320 0 377.3 0 448v16c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48v-16c0-70.7-57.3-128-128-128z\"></path></svg>\n            </>\n            :\n            <><svg className=\"app-chatbot-button-icon\" viewBox=\"0 0 1000 1000\"  >\n              <path d=\"M549.3,501.5l151.3-149.7c13.8-13.6,13.9-35.7,0.3-49.5c-13.6-13.8-35.8-13.9-49.5-0.3L499.9,451.9L350.6,302.2c-13.7-13.7-35.8-13.8-49.5-0.1c-13.7,13.6-13.7,35.8-0.1,49.5l149,149.5L299.8,649.8c-13.8,13.6-13.9,35.7-0.3,49.5c6.9,6.9,15.9,10.4,24.9,10.4c8.9,0,17.8-3.4,24.6-10.1l150.5-148.8l151.7,152.2c6.8,6.9,15.8,10.3,24.8,10.3c9,0,17.9-3.4,24.7-10.2c13.7-13.7,13.7-35.8,0.1-49.5L549.3,501.5z\" />\n            </svg>\n              <b>cerrar</b></>\n          }\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Chatbot from './Chatbot/views/Chatbot/Chatbot';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Chatbot />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","var map = {\n\t\"./configapi\": [\n\t\t86,\n\t\t9,\n\t\t0\n\t],\n\t\"./configapi.js\": [\n\t\t86,\n\t\t9,\n\t\t0\n\t],\n\t\"./transition\": [\n\t\t87,\n\t\t3,\n\t\t1\n\t],\n\t\"./transition.json\": [\n\t\t87,\n\t\t3,\n\t\t1\n\t],\n\t\"./transition2\": [\n\t\t88,\n\t\t3,\n\t\t2\n\t],\n\t\"./transition2.json\": [\n\t\t88,\n\t\t3,\n\t\t2\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[2]).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1])\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 67;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}